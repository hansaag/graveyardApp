{"ast":null,"code":"var _jsxFileName = \"/home/hans/dev/personlig/graveyardApp/client/src/components/ProjectInfo.js\";\nimport React, { useState, useContext, Fragment, useEffect } from \"react\";\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { GlobalEdit } from \"../contexts/GlobalEdit\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport JsonActivities, { cleanComments } from \"../utilities/JsonActivities\";\nimport { ProjectContext } from \"../contexts/ProjectContext\";\nimport { ProgressContext } from \"../contexts/ProgressContext\";\nimport { ProgressBar } from \"./ProgressBar\";\nimport { chosenConnection } from \"../utilities/Connections\";\n\nconst ProjectInfo = ({\n  updateLocalProjectValue\n}) => {\n  const {\n    value,\n    setValue\n  } = useContext(GlobalContext);\n  const {\n    viewProject,\n    setViewProject\n  } = useContext(ProjectContext);\n  const {\n    temporaryProgress,\n    setTemporaryProgress\n  } = useContext(ProgressContext);\n  const [commentsRendered, setCommentsRendered] = useState([]);\n  const [newlyAddedComment, setNewlyAddedComment] = useState(false);\n  const [input, setInput] = useState(false);\n  const [progressAdded, SetProgressAdded] = useState(false);\n  const {\n    authenticated,\n    setAuthenticated\n  } = useContext(UserContext);\n  let id = value.gy.id;\n  let removed = -1;\n  let newComment;\n  let startDate;\n  if (viewProject) startDate = `${viewProject.added.substring(8, 10)}.${viewProject.added.substring(5, 7)}.${viewProject.added.substring(0, 4)}`;\n\n  const registerInput = e => {\n    console.log(e.target.value);\n\n    if (e.target.value.length < 4) {\n      setInput(false);\n    } else setInput(true);\n  }; //learn styledcomponents react\n\n\n  const showRemoveButton = (commentID, index) => {\n    if (authenticated === 2) {\n      const prevRemove = `comment${removed}`;\n      const toRemove = `comment${index}`;\n      const comment = document.getElementById(toRemove);\n\n      if (comment.className === \"remove-comment-button show-remove-comment\") {\n        comment.className = \"remove-comment-button\";\n        removed = -1;\n      } else {\n        comment.className = \"remove-comment-button show-remove-comment\";\n        if (removed !== -1 && removed !== index) document.getElementById(prevRemove).className = \"remove-comment-button\";\n        removed = index;\n      }\n    }\n  };\n\n  const removeComment = async (comment, index) => {\n    // const projectID = comment.project_id;\n    const commentID = comment.comment_id;\n    const gyID = comment.gy_id;\n    const projectID = comment.project_id;\n    console.log(projectID, commentID, gyID);\n\n    try {\n      await fetch(`${chosenConnection}/comments/${gyID}/${projectID}/${commentID}`, {\n        method: \"DELETE\"\n      });\n      const remove = document.getElementById(`comment-li${index}`);\n      remove.className = `comment-li${index} hidden`;\n      console.log(remove);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const renderComments = arr => {\n    let fetchedComments = arr.map((it, index) => {\n      let dateEntry = it[\"added\"].substring(8, 10) + \".\" + it[\"added\"].substring(5, 7);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"comment-list-item\",\n        id: `comment-li${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        onClick: () => showRemoveButton(it[\"comment_id\"], index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, \"- \\xA0 \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comment-date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 22\n        }\n      }, dateEntry), \": \\xA0\", it[\"comment\"]), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"remove-comment-button\",\n        id: `comment${index}`,\n        onClick: () => removeComment(it, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, \"x\"));\n    });\n    console.log(fetchedComments);\n    setCommentsRendered(fetchedComments);\n  };\n\n  const getComments = async () => {\n    try {\n      await fetch(`${chosenConnection}/comments/${id}/${viewProject[\"project_id\"]}`).then(res => res.json()).then(json => renderComments(json));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const addComment = async () => {\n    newComment = document.getElementById(\"project-textarea\").value;\n    if (newComment.length < 5) return;\n    let ser = viewProject.project_id;\n\n    try {\n      const body = {\n        id,\n        ser,\n        newComment\n      };\n      await fetch(`${chosenConnection}/comments`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      document.getElementById(\"project-textarea\").value = null;\n      setNewlyAddedComment(true);\n      setInput(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const increaseProgress = () => {\n    SetProgressAdded(true);\n    setTemporaryProgress(prev => {\n      if (temporaryProgress == null) {\n        return viewProject.percent_finished + 5;\n      } else if (temporaryProgress == 100) {\n        return prev;\n      } else {\n        return prev + 5;\n      }\n    });\n  };\n\n  const regretProgress = () => {\n    setTemporaryProgress(null);\n    SetProgressAdded(false);\n  };\n\n  const submitProgress = () => {\n    SetProgressAdded(false);\n\n    try {\n      const body = {\n        temporaryProgress\n      };\n      console.log(body);\n      const response = fetch(`${chosenConnection}/projects/${viewProject.gy_id}/${viewProject.project_id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      updateLocalProjectValue(viewProject, temporaryProgress);\n      setTemporaryProgress(body[\"temporaryProgress\"]);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  const progressControls = () => {\n    if (viewProject && viewProject.date_completed) {\n      let endDate = `${viewProject.added.substring(8, 10)}.${viewProject.added.substring(5, 7)}.${viewProject.added.substring(0, 4)}`;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"project-complete-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }, \"Fullf\\xF8rt:\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }\n      }, endDate)));\n    } else return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-input\",\n      onClick: increaseProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: `progress-abort-button ${progressAdded ? \"show\" : \"\"}`,\n      onClick: regretProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, \"x\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: `progress-register-button ${progressAdded ? \"show\" : \"\"}`,\n      onClick: submitProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, \"\\u2713\"));\n  };\n\n  const progressView = progressControls();\n  useEffect(() => {\n    console.log(removed);\n    regretProgress();\n    getComments();\n  }, [viewProject]);\n  useEffect(() => {\n    getComments();\n    setNewlyAddedComment(false);\n  }, [newlyAddedComment]);\n\n  if (viewProject) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-title-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-visual-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-prio-visual\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, \"P\", viewProject.project_prio)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }\n    }, viewProject.project_title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-start-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }\n    }, \"Startet: \", startDate)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ProgressBar, {\n      done: viewProject.percent_finished,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }\n    }), progressView), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-descr-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"project-description-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }\n    }, \"Tilleggsinformasjon\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"project-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    }, viewProject.project_descr)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-completion-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"comment-list-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }\n    }, \"Kommentarer\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"comment-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }\n    }, commentsRendered), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"comment-textarea\",\n      id: \"project-textarea\",\n      placeholder: \" Skriv en kommentar \\r (minst 4 tegn)\",\n      onChange: e => registerInput(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `add-comment-button ${input ? \"show\" : \"\"}`,\n      id: \"submit-comment\",\n      onClick: addComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }\n    }, \"+\"))));\n  } else return null;\n};\n\nexport default ProjectInfo;","map":{"version":3,"sources":["/home/hans/dev/personlig/graveyardApp/client/src/components/ProjectInfo.js"],"names":["React","useState","useContext","Fragment","useEffect","GlobalContext","GlobalEdit","UserContext","JsonActivities","cleanComments","ProjectContext","ProgressContext","ProgressBar","chosenConnection","ProjectInfo","updateLocalProjectValue","value","setValue","viewProject","setViewProject","temporaryProgress","setTemporaryProgress","commentsRendered","setCommentsRendered","newlyAddedComment","setNewlyAddedComment","input","setInput","progressAdded","SetProgressAdded","authenticated","setAuthenticated","id","gy","removed","newComment","startDate","added","substring","registerInput","e","console","log","target","length","showRemoveButton","commentID","index","prevRemove","toRemove","comment","document","getElementById","className","removeComment","comment_id","gyID","gy_id","projectID","project_id","fetch","method","remove","err","error","message","renderComments","arr","fetchedComments","map","it","dateEntry","getComments","then","res","json","addComment","ser","body","headers","JSON","stringify","increaseProgress","prev","percent_finished","regretProgress","submitProgress","response","progressControls","date_completed","endDate","progressView","project_prio","project_title","project_descr"],"mappings":"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","sourcesContent":["import React, { useState, useContext, Fragment, useEffect } from \"react\";\n\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { GlobalEdit } from \"../contexts/GlobalEdit\";\nimport { UserContext } from \"../contexts/UserContext\";\n\n\nimport JsonActivities, { cleanComments } from \"../utilities/JsonActivities\";\nimport { ProjectContext } from \"../contexts/ProjectContext\";\nimport { ProgressContext } from \"../contexts/ProgressContext\";\nimport { ProgressBar } from \"./ProgressBar\";\nimport { chosenConnection } from \"../utilities/Connections\";\n\nconst ProjectInfo = ({ updateLocalProjectValue }) => {\n  const { value, setValue } = useContext(GlobalContext);\n  const { viewProject, setViewProject } = useContext(ProjectContext);\n  const { temporaryProgress, setTemporaryProgress } = useContext(\n    ProgressContext\n  );\n  const [commentsRendered, setCommentsRendered] = useState([]);\n  const [newlyAddedComment, setNewlyAddedComment] = useState(false);\n  const [input, setInput] = useState(false);\n  const [progressAdded, SetProgressAdded] = useState(false);\n  const { authenticated, setAuthenticated } = useContext(UserContext);\n\n\n  let id = value.gy.id;\n  let removed = -1;\n  let newComment;\n\n\n  let startDate;\n  if (viewProject)\n    startDate = `${viewProject.added.substring(\n      8,\n      10\n    )}.${viewProject.added.substring(5, 7)}.${viewProject.added.substring(\n      0,\n      4\n    )}`;\n\n  const registerInput = (e) => {\n    console.log(e.target.value);\n    if (e.target.value.length < 4) {\n      setInput(false);\n    } else setInput(true);\n  };\n\n  //learn styledcomponents react\n  const showRemoveButton = (commentID, index) => {\n\n    if (authenticated === 2) {\n      const prevRemove = `comment${removed}`\n      const toRemove = `comment${index}`\n      const comment = document.getElementById(toRemove);\n\n      if (comment.className === \"remove-comment-button show-remove-comment\") {\n        comment.className = \"remove-comment-button\"\n        removed = -1;\n      } else {\n        comment.className = \"remove-comment-button show-remove-comment\";\n        if (removed !== -1 && removed !== index) document.getElementById(prevRemove).className = \"remove-comment-button\";\n\n        removed = index;\n      }\n\n    }\n  }\n\n  const removeComment = async (comment, index) => {\n    // const projectID = comment.project_id;\n    const commentID = comment.comment_id;\n    const gyID = comment.gy_id;\n    const projectID = comment.project_id;\n\n    console.log(projectID, commentID, gyID);\n\n    try {\n      await fetch(`${chosenConnection}/comments/${gyID}/${projectID}/${commentID}`, {\n        method: \"DELETE\"\n      })\n      const remove = document.getElementById(`comment-li${index}`);\n      remove.className = `comment-li${index} hidden`;\n      console.log(remove);\n\n\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  const renderComments = (arr) => {\n    let fetchedComments = arr.map((it, index) => {\n      let dateEntry =\n        it[\"added\"].substring(8, 10) + \".\" + it[\"added\"].substring(5, 7);\n      return (\n        <li className=\"comment-list-item\" id={`comment-li${index}`}>\n          <p onClick={() => showRemoveButton(it[\"comment_id\"], index)}>\n            - &nbsp; <span className=\"comment-date\">{dateEntry}</span>: &nbsp;\n            {it[\"comment\"]}\n          </p>\n          <div className=\"remove-comment-button\" id={`comment${index}`} onClick={() => removeComment(it, index)}>x</div>\n        </li>\n      );\n    });\n    console.log(fetchedComments);\n    setCommentsRendered(fetchedComments);\n  };\n\n\n  const getComments = async () => {\n    try {\n      await fetch(\n        `${chosenConnection}/comments/${id}/${viewProject[\"project_id\"]}`\n      )\n        .then((res) => res.json())\n        .then((json) => renderComments(json));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n\n  const addComment = async () => {\n    newComment = document.getElementById(\"project-textarea\").value;\n    if (newComment.length < 5) return;\n    let ser = viewProject.project_id;\n    try {\n      const body = {\n        id,\n        ser,\n        newComment,\n      };\n      await fetch(`${chosenConnection}/comments`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      document.getElementById(\"project-textarea\").value = null;\n      setNewlyAddedComment(true);\n      setInput(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const increaseProgress = () => {\n    SetProgressAdded(true);\n\n\n    setTemporaryProgress((prev) => {\n      if (temporaryProgress == null) {\n        return viewProject.percent_finished + 5;\n      } else if (temporaryProgress == 100) {\n        return prev;\n      } else {\n        return prev + 5;\n      }\n    });\n  };\n\n  const regretProgress = () => {\n    setTemporaryProgress(null);\n    SetProgressAdded(false);\n  };\n\n  const submitProgress = () => {\n    SetProgressAdded(false);\n    try {\n      const body = { temporaryProgress };\n      console.log(body);\n      const response = fetch(\n        `${chosenConnection}/projects/${viewProject.gy_id}/${viewProject.project_id}`,\n        {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(body),\n        }\n      );\n\n      updateLocalProjectValue(viewProject, temporaryProgress);\n      setTemporaryProgress(body[\"temporaryProgress\"]);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  const progressControls = () => {\n    if (viewProject && viewProject.date_completed) {\n      let endDate = `${viewProject.added.substring(\n        8,\n        10\n      )}.${viewProject.added.substring(5, 7)}.${viewProject.added.substring(\n        0,\n        4\n      )}`;\n\n      return (\n        <>\n          <div className=\"project-complete-text\">\n            <p>Fullført:</p>\n            <p>{endDate}</p>\n          </div>\n        </>\n      );\n    } else\n      return (\n        <>\n          <div className=\"progress-input\" onClick={increaseProgress}>\n            +\n          </div>\n          <div\n            className={`progress-abort-button ${progressAdded ? \"show\" : \"\"}`}\n            onClick={regretProgress}\n          >\n            x\n          </div>\n          <div\n            className={`progress-register-button ${\n              progressAdded ? \"show\" : \"\"\n              }`}\n            onClick={submitProgress}\n          >\n            &#10003;\n          </div>\n        </>\n      );\n  };\n\n  const progressView = progressControls();\n\n  useEffect(() => {\n    console.log(removed);\n    regretProgress();\n    getComments();\n  }, [viewProject]);\n\n  useEffect(() => {\n    getComments();\n    setNewlyAddedComment(false);\n  }, [newlyAddedComment]);\n\n  if (viewProject) {\n    return (\n      <div className=\"project-info-container\">\n        <div className=\"project-title-container\">\n          <div className=\"project-visual-info\">\n            <div className=\"project-prio-visual\">\n              P{viewProject.project_prio}\n            </div>\n          </div>\n          <p>{viewProject.project_title}</p>\n        </div>\n        <div className=\"project-start-date\">\n          <p>Startet: {startDate}</p>\n        </div>\n\n        <div className=\"progress-box\">\n          <ProgressBar done={viewProject.percent_finished} />\n          {progressView}\n        </div>\n\n        <div className=\"project-descr-container\">\n          <p className=\"project-description-header\">Tilleggsinformasjon</p>\n          <p className=\"project-description\">{viewProject.project_descr}</p>\n        </div>\n        <div className=\"project-completion-container\"></div>\n        <div className=\"comment-list-container\">\n          <p className=\"comment-list-header\">Kommentarer</p>\n          <ul className=\"comment-list\">{commentsRendered}</ul>\n          <div className=\"comment-input-container\">\n            <textarea\n              className=\"comment-textarea\"\n              id=\"project-textarea\"\n              placeholder=\" Skriv en kommentar &#13;&#10;  (minst 4 tegn)\"\n              onChange={(e) => registerInput(e)}\n            ></textarea>\n            <div\n              className={`add-comment-button ${input ? \"show\" : \"\"}`}\n              id=\"submit-comment\"\n              onClick={addComment}\n            >\n              +\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else return null;\n};\n\nexport default ProjectInfo;\n"]},"metadata":{},"sourceType":"module"}