{"ast":null,"code":"var _jsxFileName = \"/mnt/d/web/graveyardApp/client/src/components/ProjectInfo.js\";\nimport React, { useState, useContext, Fragment, useEffect } from \"react\";\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { GlobalEdit } from \"../contexts/GlobalEdit\";\nimport JsonActivities, { cleanComments } from \"../utilities/JsonActivities\";\nimport { ProjectContext } from \"../contexts/ProjectContext\";\nimport { ProgressContext } from \"../contexts/ProgressContext\";\nimport { ProgressBar } from \"./ProgressBar\";\n\nconst ProjectInfo = () => {\n  let newComment;\n  const {\n    value,\n    setValue\n  } = useContext(GlobalContext);\n  const {\n    viewProject,\n    setViewProject\n  } = useContext(ProjectContext);\n  const {\n    temporaryProgress,\n    setTemporaryProgress\n  } = useContext(ProgressContext);\n  const [commentsRendered, setCommentsRendered] = useState([]);\n  const [newlyAddedComment, setNewlyAddedComment] = useState(false);\n  const [input, setInput] = useState(false);\n  const [progressAdded, SetProgressAdded] = useState(false);\n\n  const registerInput = e => {\n    console.log(e.target.value);\n\n    if (e.target.value.length < 4) {\n      setInput(false);\n    } else setInput(true);\n  };\n\n  let id = value.gy.id;\n\n  const renderComments = arr => {\n    let fetchedComments = arr.map(it => {\n      let dateEntry = it[\"added\"].substring(8, 10) + \".\" + it[\"added\"].substring(5, 7);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \"- \\xA0 \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comment-date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 22\n        }\n      }, dateEntry), \": \\xA0\", it[\"comment\"]));\n    });\n    console.log(fetchedComments);\n    setCommentsRendered(fetchedComments);\n  };\n\n  const getComments = async () => {\n    try {\n      await fetch(`http://138.68.88.7:5000/comments/${id}/${viewProject[\"project_id\"]}`).then(res => res.json()).then(json => renderComments(json));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const addComment = async () => {\n    newComment = document.getElementById(\"project-textarea\").value;\n    console.log(newComment.length);\n    if (newComment.length < 5) return;\n    let ser = viewProject.project_id;\n\n    try {\n      const body = {\n        id,\n        ser,\n        newComment\n      };\n      console.log(body);\n      const response = await fetch(`http://138.68.88.7:5000/comments`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      document.getElementById(\"project-textarea\").value = null;\n      setNewlyAddedComment(true);\n      setInput(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const increaseProgress = () => {\n    SetProgressAdded(true);\n    setTemporaryProgress(prev => {\n      if (temporaryProgress == null) {\n        console.log(temporaryProgress);\n        console.log(viewProject.percent_finished);\n        return viewProject.percent_finished + 5;\n      } else {\n        console.log(temporaryProgress);\n        return prev + 5;\n      }\n    });\n  };\n\n  const regretProgress = () => {\n    setTemporaryProgress(null);\n    SetProgressAdded(false);\n  };\n\n  useEffect(() => {\n    regretProgress();\n    setCommentsRendered([]);\n    getComments();\n  }, [viewProject]);\n  useEffect(() => {\n    getComments();\n    setNewlyAddedComment(false);\n  }, [newlyAddedComment]);\n\n  if (viewProject) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-title-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-visual-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-prio-visual\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, \"P\", viewProject.project_prio)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, viewProject.project_title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ProgressBar, {\n      done: viewProject.percent_finished,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-input\",\n      onClick: increaseProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: `progress-abort-button ${progressAdded ? \"show\" : \"\"}`,\n      onClick: regretProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, \"x\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: `progress-register-button ${progressAdded ? \"show\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, \"\\u2713\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-descr-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"project-description-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, \"Tilleggsinformasjon\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"project-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, viewProject.project_descr)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-completion-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"comment-list-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, \"Kommentarer\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"comment-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, commentsRendered), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"comment-textarea\",\n      id: \"project-textarea\",\n      placeholder: \" Skriv en kommentar \\r (minst 4 tegn)\",\n      onChange: e => registerInput(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `add-comment-button ${input ? \"show\" : \"\"}`,\n      id: \"submit-comment\",\n      onClick: addComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, \"+\"))));\n  } else return null;\n};\n\nexport default ProjectInfo;","map":{"version":3,"sources":["/mnt/d/web/graveyardApp/client/src/components/ProjectInfo.js"],"names":["React","useState","useContext","Fragment","useEffect","GlobalContext","GlobalEdit","JsonActivities","cleanComments","ProjectContext","ProgressContext","ProgressBar","ProjectInfo","newComment","value","setValue","viewProject","setViewProject","temporaryProgress","setTemporaryProgress","commentsRendered","setCommentsRendered","newlyAddedComment","setNewlyAddedComment","input","setInput","progressAdded","SetProgressAdded","registerInput","e","console","log","target","length","id","gy","renderComments","arr","fetchedComments","map","it","dateEntry","substring","getComments","fetch","then","res","json","err","error","message","addComment","document","getElementById","ser","project_id","body","response","method","headers","JSON","stringify","increaseProgress","prev","percent_finished","regretProgress","project_prio","project_title","project_descr"],"mappings":"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","sourcesContent":["import React, { useState, useContext, Fragment, useEffect } from \"react\";\n\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { GlobalEdit } from \"../contexts/GlobalEdit\";\n\nimport JsonActivities, { cleanComments } from \"../utilities/JsonActivities\";\nimport { ProjectContext } from \"../contexts/ProjectContext\";\nimport { ProgressContext } from \"../contexts/ProgressContext\";\nimport { ProgressBar } from \"./ProgressBar\";\n\nconst ProjectInfo = () => {\n  let newComment;\n  const { value, setValue } = useContext(GlobalContext);\n  const { viewProject, setViewProject } = useContext(ProjectContext);\n  const { temporaryProgress, setTemporaryProgress } = useContext(\n    ProgressContext\n  );\n  const [commentsRendered, setCommentsRendered] = useState([]);\n  const [newlyAddedComment, setNewlyAddedComment] = useState(false);\n  const [input, setInput] = useState(false);\n  const [progressAdded, SetProgressAdded] = useState(false);\n\n  const registerInput = (e) => {\n    console.log(e.target.value);\n    if (e.target.value.length < 4) {\n      setInput(false);\n    } else setInput(true);\n  };\n\n  let id = value.gy.id;\n\n  const renderComments = (arr) => {\n    let fetchedComments = arr.map((it) => {\n      let dateEntry =\n        it[\"added\"].substring(8, 10) + \".\" + it[\"added\"].substring(5, 7);\n      return (\n        <li>\n          <p>\n            - &nbsp; <span className=\"comment-date\">{dateEntry}</span>: &nbsp;\n            {it[\"comment\"]}\n          </p>\n        </li>\n      );\n    });\n    console.log(fetchedComments);\n    setCommentsRendered(fetchedComments);\n  };\n  const getComments = async () => {\n    try {\n      await fetch(\n        `http://138.68.88.7:5000/comments/${id}/${viewProject[\"project_id\"]}`\n      )\n        .then((res) => res.json())\n        .then((json) => renderComments(json));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const addComment = async () => {\n    newComment = document.getElementById(\"project-textarea\").value;\n    console.log(newComment.length);\n    if (newComment.length < 5) return;\n    let ser = viewProject.project_id;\n    try {\n      const body = {\n        id,\n        ser,\n        newComment,\n      };\n      console.log(body);\n      const response = await fetch(`http://138.68.88.7:5000/comments`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      document.getElementById(\"project-textarea\").value = null;\n      setNewlyAddedComment(true);\n      setInput(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const increaseProgress = () => {\n    SetProgressAdded(true);\n\n    setTemporaryProgress((prev) => {\n      if (temporaryProgress == null) {\n        console.log(temporaryProgress);\n        console.log(viewProject.percent_finished);\n        return viewProject.percent_finished + 5;\n      } else {\n        console.log(temporaryProgress);\n\n        return prev + 5;\n      }\n    });\n  };\n\n  const regretProgress = () => {\n    setTemporaryProgress(null);\n    SetProgressAdded(false);\n  };\n\n  useEffect(() => {\n    regretProgress();\n    setCommentsRendered([]);\n    getComments();\n  }, [viewProject]);\n\n  useEffect(() => {\n    getComments();\n    setNewlyAddedComment(false);\n  }, [newlyAddedComment]);\n\n  if (viewProject) {\n    return (\n      <div className=\"project-info-container\">\n        <div className=\"project-title-container\">\n          <div className=\"project-visual-info\">\n            <div className=\"project-prio-visual\">\n              P{viewProject.project_prio}\n            </div>\n          </div>\n          <p>{viewProject.project_title}</p>\n        </div>\n        <div className=\"progress-box\">\n          <ProgressBar done={viewProject.percent_finished} />\n          <div className=\"progress-input\" onClick={increaseProgress}>\n            +\n          </div>\n          <div\n            className={`progress-abort-button ${progressAdded ? \"show\" : \"\"}`}\n            onClick={regretProgress}\n          >\n            x\n          </div>\n          <div\n            className={`progress-register-button ${\n              progressAdded ? \"show\" : \"\"\n            }`}\n          >\n            &#10003;\n          </div>\n        </div>\n\n        <div className=\"project-descr-container\">\n          <p className=\"project-description-header\">Tilleggsinformasjon</p>\n          <p className=\"project-description\">{viewProject.project_descr}</p>\n        </div>\n        <div className=\"project-completion-container\"></div>\n        <div className=\"comment-list-container\">\n          <p className=\"comment-list-header\">Kommentarer</p>\n          <ul className=\"comment-list\">{commentsRendered}</ul>\n          <div className=\"comment-input-container\">\n            <textarea\n              className=\"comment-textarea\"\n              id=\"project-textarea\"\n              placeholder=\" Skriv en kommentar &#13;&#10;  (minst 4 tegn)\"\n              onChange={(e) => registerInput(e)}\n            ></textarea>\n            <div\n              className={`add-comment-button ${input ? \"show\" : \"\"}`}\n              id=\"submit-comment\"\n              onClick={addComment}\n            >\n              +\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else return null;\n};\n\nexport default ProjectInfo;\n"]},"metadata":{},"sourceType":"module"}