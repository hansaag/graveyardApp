{"ast":null,"code":"var _jsxFileName = \"/Users/Hansi/Desktop/gardener/client/src/components/FieldButton.js\";\nimport React, { useState, useContext, Fragment, useEffect, memo, useCallback } from \"react\";\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { FieldButtons } from \"../contexts/FieldButtons\";\nexport const FieldButton = React.memo(({\n  item,\n  index,\n  click\n}) => {\n  const {\n    allClicked,\n    setAllClicked\n  } = useContext(FieldButtons);\n  const [active, SetActive] = useState(false);\n\n  const toggle = () => {\n    preventDefault();\n    SetActive(!active);\n\n    if (allClicked == 2) {\n      setAllClicked(3);\n    }\n  };\n\n  const toggleInactive = () => {\n    preventDefault();\n    SetActive(!active);\n  };\n\n  const allToggled = () => {\n    if (allClicked == 2) SetActive(true);\n    if (allClicked == 1) SetActive(false);\n  };\n\n  useEffect(() => {\n    allToggled();\n  }, [allClicked]);\n  useEffect(() => {}, [active]);\n  if (active) return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"round-button-work-active\",\n    onClick: toggle,\n    role: \"dialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"noSelect\",\n    role: \"dialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, item));else return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"round-button-work-inactive\",\n    role: \"dialog\",\n    onClick: toggleInactive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"noSelect\",\n    role: \"dialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, item));\n});","map":{"version":3,"sources":["/Users/Hansi/Desktop/gardener/client/src/components/FieldButton.js"],"names":["React","useState","useContext","Fragment","useEffect","memo","useCallback","GlobalContext","FieldButtons","FieldButton","item","index","click","allClicked","setAllClicked","active","SetActive","toggle","preventDefault","toggleInactive","allToggled"],"mappings":";AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,WANF,QAOO,OAPP;AASA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AAEA,OAAO,MAAMC,WAAW,GAAGT,KAAK,CAACK,IAAN,CAAW,CAAC;AAAEK,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA4B;AAChE,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCZ,UAAU,CAACM,YAAD,CAAhD;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMgB,MAAM,GAAG,MAAM;AACnBC,IAAAA,cAAc;AACdF,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;;AACA,QAAIF,UAAU,IAAI,CAAlB,EAAqB;AACnBC,MAAAA,aAAa,CAAC,CAAD,CAAb;AACD;AACF,GAND;;AAQA,QAAMK,cAAc,GAAG,MAAM;AAC3BD,IAAAA,cAAc;AACdF,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAHD;;AAKA,QAAMK,UAAU,GAAG,MAAM;AACvB,QAAIP,UAAU,IAAI,CAAlB,EAAqBG,SAAS,CAAC,IAAD,CAAT;AACrB,QAAIH,UAAU,IAAI,CAAlB,EAAqBG,SAAS,CAAC,KAAD,CAAT;AACtB,GAHD;;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACP,UAAD,CAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACW,MAAD,CAAX,CAAT;AAEA,MAAIA,MAAJ,EACE,oBACE;AAAQ,IAAA,SAAS,EAAC,0BAAlB;AAA6C,IAAA,OAAO,EAAEE,MAAtD;AAA8D,IAAA,IAAI,EAAC,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCP,IAAzC,CADF,CADF,CADF,KAOE,oBACE;AAAQ,IAAA,SAAS,EAAC,4BAAlB;AAA+C,IAAA,IAAI,EAAC,QAApD;AAA6D,IAAA,OAAO,EAAES,cAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCT,IAAzC,CADF,CADF;AAKH,CAxC0B,CAApB","sourcesContent":["import React, {\n  useState,\n  useContext,\n  Fragment,\n  useEffect,\n  memo,\n  useCallback,\n} from \"react\";\n\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { FieldButtons } from \"../contexts/FieldButtons\";\n\nexport const FieldButton = React.memo(({ item, index, click }) => {\n  const { allClicked, setAllClicked } = useContext(FieldButtons);\n  const [active, SetActive] = useState(false);\n\n  const toggle = () => {\n    preventDefault();\n    SetActive(!active);\n    if (allClicked == 2) {\n      setAllClicked(3);\n    }\n  };\n\n  const toggleInactive = () => {\n    preventDefault();\n    SetActive(!active);\n  };\n\n  const allToggled = () => {\n    if (allClicked == 2) SetActive(true);\n    if (allClicked == 1) SetActive(false);\n  };\n\n  useEffect(() => {\n    allToggled();\n  }, [allClicked]);\n\n  useEffect(() => {}, [active]);\n\n  if (active)\n    return (\n      <button className=\"round-button-work-active\" onClick={toggle} role=\"dialog\"> \n        <div className=\"noSelect\" role=\"dialog\">{item}</div>\n      </button>\n    );\n  else\n    return (\n      <button className=\"round-button-work-inactive\" role=\"dialog\" onClick={toggleInactive}>\n        <div className=\"noSelect\" role=\"dialog\">{item}</div>\n      </button>\n    );\n});\n"]},"metadata":{},"sourceType":"module"}