{"ast":null,"code":"var _jsxFileName = \"/home/hans/dev/personlig/graveyardApp/client/src/components/Fields.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport MenuFieldButton from \"./MenuFieldButton\";\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { fieldActivities } from \"../utilities/GraveyardInfo\";\nimport { ActivityViewContext } from \"../contexts/ActivityViewContext\";\nimport { CriticalFieldsContext } from \"../contexts/CriticalFieldsContext\";\nimport { GlobalEdit } from \"../contexts/GlobalEdit\";\nimport { lightDates } from \"../utilities/JsonActivities\";\nimport { chosenConnection } from \"../utilities/Connections\";\nimport trash from \"../images/bin.png\";\n\nconst Fields = ({\n  fields\n}) => {\n  const {\n    value,\n    setValue\n  } = useContext(GlobalContext);\n  const {\n    selectedActivity,\n    setSelectedActivity\n  } = useContext(ActivityViewContext);\n  const {\n    edit,\n    setEdit\n  } = useContext(GlobalEdit);\n  const [showActivityList, setshowActivityList] = useState(false);\n  const [criticalDates, setCriticalDates] = useState([]);\n\n  const setDates = items => {\n    setCriticalDates(items);\n  };\n\n  const handleActivitySelectorClick = () => {\n    setshowActivityList(!showActivityList);\n  };\n\n  const selectActivityClick = async (item, name) => {\n    setSelectedActivity(item);\n    setshowActivityList(false);\n\n    try {\n      await fetch(`${chosenConnection}/fields/${value.gy.id}`).then(res => res.json()).then(items => lightDates(items, name)).then(items => setDates(items));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    setshowActivityList(false);\n    setSelectedActivity(null);\n    setCriticalDates([]);\n  }, [edit]);\n  const currentFields = fields.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MenuFieldButton, {\n    item: item,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  })));\n  const activityList = fieldActivities.map((item, index) => {\n    if (index < 6) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        onClick: () => selectActivityClick(item, fieldActivities[index].dbValue),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: item.img,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }));\n    }\n  });\n\n  const activitySelectorIcon = () => {\n    if (showActivityList) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => setSelectedActivity(null),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: trash,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      if (selectedActivity) return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: selectedActivity.img,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }));else return /*#__PURE__*/React.createElement(\"icon\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }\n      }, \"+\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Styled_FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CriticalFieldsContext.Provider, {\n    value: {\n      criticalDates,\n      setCriticalDates\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, showActivityList ? /*#__PURE__*/React.createElement(Styled_ActivityList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, activityList) : /*#__PURE__*/React.createElement(Styled_FieldList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, currentFields)), /*#__PURE__*/React.createElement(Styled_ActivitySelector, {\n    onClick: handleActivitySelectorClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"Visning\"), activitySelectorIcon()));\n};\n\nconst Styled_FieldWrapper = styled.div`\n  width: 95%;\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 1vh;\n`;\nconst Styled_FieldList = styled.ul`\n  display: flex;\n  list-style-type: none;\n  justify-content: flex-start;\n  padding: 0;\n  flex-wrap: wrap;\n  margin: 0;\n  width: 85%;\n\n  & li {\n    text-align: center;\n    display: flex;\n    margin: 0.5vh 0 0 1.2vw;\n  }\n`;\nconst Styled_ActivityList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  padding: 0;\n  flex-wrap: wrap;\n  width: 100%;\n\n  & li {\n    background: white;\n    border-radius: 10px;\n    width: 12vw;\n    max-width: 65px;\n    height: 5.5vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: 0.2vh 0 0.5vh 2vw;\n    font-size: 0.65em;\n    box-shadow: 1px 1px 3px black;\n\n    & img {\n      height: 80%;\n      max-height: 40px;\n      margin: 0.5vh 1vw auto 2vw;\n    };\n  };\n`;\nconst Styled_ActivitySelector = styled.div`\n  height: 60px;\n  font-size: 0.8em;\n  width: 15%;\n  margin: 0.5vh 3vw 1.5vh 1.5vw;\n  background: white;\n  border-radius: 10%;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  justify-content: flex-start;\n  box-shadow: 1px 0.5px 4px rgba(0, 0, 0, 1);\n\n  & h5 {\n    padding: 5px 5px 0 5px;\n    margin: 0;\n    font-weight: 600;\n    letter-spacing: 0.5px;\n  }\n\n  & div {\n    height: 6vh;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n\n    & img {\n      max-height: 65%;\n      margin-top: 7px;\n      margin-bottom: 0;\n    }\n  }\n\n  & icon {\n    font-size: 4em;\n    color: black;\n    line-height: 25px;\n    margin: 0 auto;\n    margin-top: 7px;\n  }\n`;\nexport default Fields;","map":{"version":3,"sources":["/home/hans/dev/personlig/graveyardApp/client/src/components/Fields.js"],"names":["React","useState","useContext","useEffect","styled","MenuFieldButton","GlobalContext","fieldActivities","ActivityViewContext","CriticalFieldsContext","GlobalEdit","lightDates","chosenConnection","trash","Fields","fields","value","setValue","selectedActivity","setSelectedActivity","edit","setEdit","showActivityList","setshowActivityList","criticalDates","setCriticalDates","setDates","items","handleActivitySelectorClick","selectActivityClick","item","name","fetch","gy","id","then","res","json","err","console","error","message","currentFields","map","index","activityList","dbValue","img","activitySelectorIcon","Styled_FieldWrapper","div","Styled_FieldList","ul","Styled_ActivityList","Styled_ActivitySelector"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport MenuFieldButton from \"./MenuFieldButton\";\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { fieldActivities } from \"../utilities/GraveyardInfo\";\nimport { ActivityViewContext } from \"../contexts/ActivityViewContext\";\nimport { CriticalFieldsContext } from \"../contexts/CriticalFieldsContext\";\nimport { GlobalEdit } from \"../contexts/GlobalEdit\";\nimport { lightDates } from \"../utilities/JsonActivities\";\nimport { chosenConnection } from \"../utilities/Connections\";\n\nimport trash from \"../images/bin.png\";\n\nconst Fields = ({ fields }) => {\n  const { value, setValue } = useContext(GlobalContext);\n  const { selectedActivity, setSelectedActivity } =\n    useContext(ActivityViewContext);\n\n  const { edit, setEdit } = useContext(GlobalEdit);\n  const [showActivityList, setshowActivityList] = useState(false);\n  const [criticalDates, setCriticalDates] = useState([]);\n\n  const setDates = (items) => {\n    setCriticalDates(items);\n  };\n\n  const handleActivitySelectorClick = () => {\n    setshowActivityList(!showActivityList);\n  };\n\n  const selectActivityClick = async (item, name) => {\n    setSelectedActivity(item);\n    setshowActivityList(false);\n\n    try {\n      await fetch(`${chosenConnection}/fields/${value.gy.id}`)\n        .then((res) => res.json())\n        .then((items) => lightDates(items, name))\n        .then((items) => setDates(items));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    setshowActivityList(false);\n    setSelectedActivity(null);\n    setCriticalDates([]);\n  }, [edit]);\n\n  const currentFields = fields.map((item, index) => (\n    <li>\n      <MenuFieldButton item={item} index={index} />\n    </li>\n  ));\n\n  const activityList = fieldActivities.map((item, index) => {\n    if (index < 6) {\n      return (\n        <li\n          key={index}\n          onClick={() =>\n            selectActivityClick(item, fieldActivities[index].dbValue)\n          }\n        >\n          <img src={item.img} />\n        </li>\n      );\n    }\n  });\n\n  const activitySelectorIcon = () => {\n    if (showActivityList) {\n      return (\n        <div onClick={() => setSelectedActivity(null)}>\n          <img src={trash} />\n        </div>\n      );\n    } else {\n      if (selectedActivity)\n        return (\n          <div>\n            <img src={selectedActivity.img} />\n          </div>\n        );\n      else return <icon>+</icon>;\n    }\n  };\n\n  return (\n    <Styled_FieldWrapper>\n      <CriticalFieldsContext.Provider\n        value={{ criticalDates, setCriticalDates }}\n      >\n        {showActivityList ? (\n          <Styled_ActivityList>{activityList}</Styled_ActivityList>\n        ) : (\n          <Styled_FieldList>{currentFields}</Styled_FieldList>\n        )}\n      </CriticalFieldsContext.Provider>\n\n      <Styled_ActivitySelector onClick={handleActivitySelectorClick}>\n        <h5>Visning</h5>\n        {activitySelectorIcon()}\n      </Styled_ActivitySelector>\n    </Styled_FieldWrapper>\n  );\n};\n\nconst Styled_FieldWrapper = styled.div`\n  width: 95%;\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 1vh;\n`;\n\nconst Styled_FieldList = styled.ul`\n  display: flex;\n  list-style-type: none;\n  justify-content: flex-start;\n  padding: 0;\n  flex-wrap: wrap;\n  margin: 0;\n  width: 85%;\n\n  & li {\n    text-align: center;\n    display: flex;\n    margin: 0.5vh 0 0 1.2vw;\n  }\n`;\nconst Styled_ActivityList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  padding: 0;\n  flex-wrap: wrap;\n  width: 100%;\n\n  & li {\n    background: white;\n    border-radius: 10px;\n    width: 12vw;\n    max-width: 65px;\n    height: 5.5vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: 0.2vh 0 0.5vh 2vw;\n    font-size: 0.65em;\n    box-shadow: 1px 1px 3px black;\n\n    & img {\n      height: 80%;\n      max-height: 40px;\n      margin: 0.5vh 1vw auto 2vw;\n    };\n  };\n`;\n\nconst Styled_ActivitySelector = styled.div`\n  height: 60px;\n  font-size: 0.8em;\n  width: 15%;\n  margin: 0.5vh 3vw 1.5vh 1.5vw;\n  background: white;\n  border-radius: 10%;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  justify-content: flex-start;\n  box-shadow: 1px 0.5px 4px rgba(0, 0, 0, 1);\n\n  & h5 {\n    padding: 5px 5px 0 5px;\n    margin: 0;\n    font-weight: 600;\n    letter-spacing: 0.5px;\n  }\n\n  & div {\n    height: 6vh;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n\n    & img {\n      max-height: 65%;\n      margin-top: 7px;\n      margin-bottom: 0;\n    }\n  }\n\n  & icon {\n    font-size: 4em;\n    color: black;\n    line-height: 25px;\n    margin: 0 auto;\n    margin-top: 7px;\n  }\n`;\n\nexport default Fields;\n"]},"metadata":{},"sourceType":"module"}