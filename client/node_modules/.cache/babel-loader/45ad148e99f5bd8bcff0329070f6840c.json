{"ast":null,"code":"var _jsxFileName = \"/Users/Hansi/Desktop/gardener/client/src/components/ProgressBar.js\";\nimport React, { useState, useContext, Fragment, useEffect } from \"react\";\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { GlobalEdit } from \"../contexts/GlobalEdit\";\nimport JsonActivities, { cleanComments } from \"../utilities/JsonActivities\";\nimport { ProjectContext } from \"../contexts/ProjectContext\";\nimport { ProgressContext } from \"../contexts/ProgressContext\";\nexport const ProgressBar = ({\n  done\n}) => {\n  const {\n    viewProject,\n    setViewProject\n  } = useContext(ProjectContext);\n  const {\n    value,\n    setValue\n  } = useContext(GlobalContext);\n  const {\n    temporaryProgress,\n    setTemporaryProgress\n  } = useContext(ProgressContext);\n\n  const progress = () => {\n    if (temporaryProgress != null && temporaryProgress > done) {\n      return temporaryProgress;\n    } else {\n      return done;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-done\",\n    style: done < 10 ? {\n      width: `${progress}%`,\n      color: \"black\"\n    } : {\n      width: `${progress}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, done, \"%\")));\n};","map":{"version":3,"sources":["/Users/Hansi/Desktop/gardener/client/src/components/ProgressBar.js"],"names":["React","useState","useContext","Fragment","useEffect","GlobalContext","GlobalEdit","JsonActivities","cleanComments","ProjectContext","ProgressContext","ProgressBar","done","viewProject","setViewProject","value","setValue","temporaryProgress","setTemporaryProgress","progress","width","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,QAAtC,EAAgDC,SAAhD,QAAiE,OAAjE;AAEA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AAEA,OAAOC,cAAP,IAAyBC,aAAzB,QAA8C,6BAA9C;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,eAAT,QAAgC,6BAAhC;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACrC,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCZ,UAAU,CAACO,cAAD,CAAlD;AACA,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBd,UAAU,CAACG,aAAD,CAAtC;AACA,QAAM;AAAEY,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAA8ChB,UAAU,CAC1DQ,eAD0D,CAA9D;;AAIA,QAAMS,QAAQ,GAAG,MAAM;AACnB,QAAIF,iBAAiB,IAAI,IAArB,IAA6BA,iBAAiB,GAAGL,IAArD,EAA2D;AACvD,aAAOK,iBAAP;AACH,KAFD,MAEO;AACH,aAAOL,IAAP;AACH;AACJ,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,eADd;AAEI,IAAA,KAAK,EACDA,IAAI,GAAG,EAAP,GACM;AAAEQ,MAAAA,KAAK,EAAG,GAAED,QAAS,GAArB;AAAyBE,MAAAA,KAAK,EAAE;AAAhC,KADN,GAEM;AAAED,MAAAA,KAAK,EAAG,GAAED,QAAS;AAArB,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKP,IARL,MADJ,CADJ,CADJ;AAgBH,CA/BM","sourcesContent":["import React, { useState, useContext, Fragment, useEffect } from \"react\";\n\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { GlobalEdit } from \"../contexts/GlobalEdit\";\n\nimport JsonActivities, { cleanComments } from \"../utilities/JsonActivities\";\nimport { ProjectContext } from \"../contexts/ProjectContext\";\nimport { ProgressContext } from \"../contexts/ProgressContext\";\n\nexport const ProgressBar = ({ done }) => {\n    const { viewProject, setViewProject } = useContext(ProjectContext);\n    const { value, setValue } = useContext(GlobalContext);\n    const { temporaryProgress, setTemporaryProgress } = useContext(\n        ProgressContext\n    );\n\n    const progress = () => {\n        if (temporaryProgress != null && temporaryProgress > done) {\n            return temporaryProgress;\n        } else {\n            return done;\n        }\n    };\n\n    return (\n        <div className=\"progress-container\">\n            <div className=\"progress\">\n                <div\n                    className=\"progress-done\"\n                    style={\n                        done < 10\n                            ? { width: `${progress}%`, color: \"black\" }\n                            : { width: `${progress}%` }\n                    }\n                >\n                    {done}%\n                </div>\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}