{"ast":null,"code":"var _jsxFileName = \"/Users/Hansi/Desktop/gardener/client/src/components/MenuFieldButton.js\";\nimport React, { useState, useContext, Fragment, useEffect, memo, useCallback } from \"react\";\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nexport const MenuFieldButton = ({\n  index\n}) => {\n  const [active, SetActive] = useState(false);\n  const {\n    value,\n    setValue\n  } = useContext(GlobalContext);\n  const fieldCode = String.fromCharCode(65 + index);\n  useEffect(() => {\n    console.log(value.gy);\n\n    if (value.field.charCodeAt(0) - 65 == index) {\n      SetActive(!active);\n    }\n  }, [value.field]);\n  if (active) return /*#__PURE__*/React.createElement(\"a\", {\n    className: \"round-button-work-active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, fieldCode);else return /*#__PURE__*/React.createElement(\"a\", {\n    className: \"round-button-work-inactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, fieldCode);\n};\nexport default MenuFieldButton;","map":{"version":3,"sources":["/Users/Hansi/Desktop/gardener/client/src/components/MenuFieldButton.js"],"names":["React","useState","useContext","Fragment","useEffect","memo","useCallback","GlobalContext","MenuFieldButton","index","active","SetActive","value","setValue","fieldCode","String","fromCharCode","console","log","gy","field","charCodeAt"],"mappings":";AAAA,OAAOA,KAAP,IACIC,QADJ,EAEIC,UAFJ,EAGIC,QAHJ,EAIIC,SAJJ,EAKIC,IALJ,EAMIC,WANJ,QAOS,OAPT;AASE,SAASC,aAAT,QAA8B,2BAA9B;AAEA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAEW,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBX,UAAU,CAACK,aAAD,CAAtC;AAEA,QAAMO,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoB,KAAKP,KAAzB,CAAlB;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,EAAlB;;AACA,QAAIP,KAAK,CAACQ,KAAN,CAAYC,UAAZ,CAAuB,CAAvB,IAA4B,EAA5B,IAAkCZ,KAAtC,EAA6C;AACzCE,MAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH;AACJ,GALQ,EAKN,CAACE,KAAK,CAACQ,KAAP,CALM,CAAT;AAQA,MAAIV,MAAJ,EACE,oBACE;AAAG,IAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,SADH,CADF,CADF,KAOE,oBACE;AAAG,IAAA,SAAS,EAAC,4BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,SADH,CADF;AAKH,CA5BM;AA8BP,eAAeN,eAAf","sourcesContent":["import React, {\n    useState,\n    useContext,\n    Fragment,\n    useEffect,\n    memo,\n    useCallback,\n  } from \"react\";\n  \n  import { GlobalContext } from \"../contexts/GlobalContext\";\n  \n  export const MenuFieldButton = ({index}) => {\n    const [active, SetActive] = useState(false);\n    const { value, setValue } = useContext(GlobalContext);\n\n    const fieldCode = String.fromCharCode(65 + index);\n  \n  \n  \n    useEffect(() => {\n        console.log(value.gy);\n        if (value.field.charCodeAt(0) - 65 == index) {\n            SetActive(!active);\n        }\n    }, [value.field]);\n  \n  \n    if (active)\n      return (\n        <a className=\"round-button-work-active\">\n          {fieldCode}\n        </a>\n      );\n    else\n      return (\n        <a className=\"round-button-work-inactive\">\n          {fieldCode}\n        </a>\n      );\n  };\n\n  export default MenuFieldButton;\n  "]},"metadata":{},"sourceType":"module"}