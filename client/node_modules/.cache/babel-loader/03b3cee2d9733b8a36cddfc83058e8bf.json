{"ast":null,"code":"var _jsxFileName = \"/Users/Hansi/Desktop/gardener/client/src/components/WorkWindow.js\";\nimport React, { useState, useContext, Fragment, useEffect, useMemo, useCallback } from \"react\";\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { GlobalEdit } from \"../contexts/GlobalEdit\";\nimport { FieldButtons } from \"../contexts/FieldButtons\";\nimport TaskList from \"./TaskList\";\nimport { FieldButton } from \"./FieldButton\";\nimport { AllFieldsButton } from \"./AllFieldsButton\";\nimport { returnDates } from \"../utilities/JsonActivities\";\nimport rightArrow from \"../images/right-arrow.png\";\nimport leftArrow from \"../images/left-arrow.png\";\nconst WorkWindow = React.memo(({\n  exit,\n  dia,\n  activity\n}) => {\n  const {\n    value,\n    setValue\n  } = useContext(GlobalContext);\n  const {\n    edit,\n    setEdit\n  } = useContext(GlobalEdit);\n  const {\n    allClicked,\n    setAllClicked\n  } = useContext(FieldButtons);\n  const fieldCount = value.gy.fields.length;\n  const allFields = {\n    id: 100,\n    value: \"ALLE\"\n  };\n  const clickedButtons = Array(fieldCount);\n  const handleOnClick = useCallback(id => {\n    console.log(id);\n    clickedButtons[id] = !clickedButtons[id];\n    console.log(clickedButtons);\n  });\n  const currentFields = value.gy.fields.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"field-list-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FieldButton, {\n    parentClick: () => handleOnClick(index),\n    index: index,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })));\n  const allFieldsButton = /*#__PURE__*/React.createElement(AllFieldsButton, {\n    name: allFields.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  });\n  currentFields.push(allFieldsButton);\n  const refArray = Array(30);\n  let currentRef = 0;\n\n  const handleRightClick = () => {\n    if (currentRef > 0 && refArray[currentRef - 1] !== null) {\n      refArray[currentRef - 1].current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n      currentRef--;\n    }\n  };\n\n  const handleLeftClick = () => {\n    if (currentRef < 29 && refArray[currentRef + 1] !== null) {\n      refArray[currentRef + 1].current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n      currentRef++;\n    }\n  };\n\n  const dateArray = returnDates().map((date, index) => {\n    const ref = React.createRef();\n    refArray[index] = ref;\n    const key = index;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"date-list-item\",\n      ref: ref,\n      dbdate: date.dbValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, date.display);\n  });\n\n  const registerWork = async e => {\n    e.preventDefault();\n    let updateArray = Array();\n\n    if (allClicked == 2) {\n      clickedButtons.fill(true);\n    }\n\n    for (let i = 0; i < value.gy.fields.length; i++) {\n      if (clickedButtons[i] == true) updateArray.push(value.gy.fields[i]);\n    }\n\n    const completedDate = dateArray[currentRef].props.dbdate;\n    const dbActivity = activity.dbValue; //should do it all in one call\n\n    if (activity.tag == \"field\") {\n      for (let u in updateArray) {\n        try {\n          const body = {\n            dbActivity,\n            completedDate\n          };\n          const response = await fetch(`http://138.68.88.7:5000/fields/${value.gy.id}/${updateArray[u]}`, {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          });\n          console.log(body);\n        } catch (err) {\n          console.log(err.message);\n        }\n      }\n    } else {\n      try {\n        const body = {\n          dbActivity,\n          completedDate\n        };\n        const response = await fetch(`http://138.68.88.7:5000/graveyards/${value.gy.id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        });\n        console.log(body);\n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n\n    exit();\n  };\n\n  useEffect(() => {}, [dia]);\n\n  if (dia) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"work-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"work-window-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"work-window-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, \"Velg felter der det har blitt\", \" \", activity.value.toLowerCase(), \" \"), /*#__PURE__*/React.createElement(\"img\", {\n      src: activity.img,\n      className: \"work-window-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"work-window-img-holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: value.gy.img,\n      className: \"work-window-gy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"work-window-field-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"work-window-field-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, currentFields)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"date-selection-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, \"Velg utf\\xF8rt dato\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"date-finished-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: leftArrow,\n      onClick: handleLeftClick,\n      className: \"left-arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"date-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, dateArray), /*#__PURE__*/React.createElement(\"img\", {\n      src: rightArrow,\n      onClick: handleRightClick,\n      className: \"right-arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"work-window-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"work-window-cancel\",\n      onClick: exit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, \"Avbryt\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"work-window-register\",\n      onClick: registerWork,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }, \"Registrer\"))));\n  }\n});\nexport default WorkWindow;","map":{"version":3,"sources":["/Users/Hansi/Desktop/gardener/client/src/components/WorkWindow.js"],"names":["React","useState","useContext","Fragment","useEffect","useMemo","useCallback","GlobalContext","GlobalEdit","FieldButtons","TaskList","FieldButton","AllFieldsButton","returnDates","rightArrow","leftArrow","WorkWindow","memo","exit","dia","activity","value","setValue","edit","setEdit","allClicked","setAllClicked","fieldCount","gy","fields","length","allFields","id","clickedButtons","Array","handleOnClick","console","log","currentFields","map","item","index","allFieldsButton","push","refArray","currentRef","handleRightClick","current","scrollIntoView","behavior","block","handleLeftClick","dateArray","date","ref","createRef","key","dbValue","display","registerWork","e","preventDefault","updateArray","fill","i","completedDate","props","dbdate","dbActivity","tag","u","body","response","fetch","method","headers","JSON","stringify","err","message","toLowerCase","img"],"mappings":"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","sourcesContent":["import React, {\n    useState,\n    useContext,\n    Fragment,\n    useEffect,\n    useMemo,\n    useCallback,\n} from \"react\";\n\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { GlobalEdit } from \"../contexts/GlobalEdit\";\nimport { FieldButtons } from \"../contexts/FieldButtons\";\nimport TaskList from \"./TaskList\";\nimport { FieldButton } from \"./FieldButton\";\nimport { AllFieldsButton } from \"./AllFieldsButton\";\nimport { returnDates } from \"../utilities/JsonActivities\";\n\nimport rightArrow from \"../images/right-arrow.png\";\nimport leftArrow from \"../images/left-arrow.png\";\n\nconst WorkWindow = React.memo(({ exit, dia, activity }) => {\n    const { value, setValue } = useContext(GlobalContext);\n    const { edit, setEdit } = useContext(GlobalEdit);\n    const { allClicked, setAllClicked } = useContext(FieldButtons);\n\n    const fieldCount = value.gy.fields.length;\n    const allFields = {\n        id: 100,\n        value: \"ALLE\",\n    };\n    const clickedButtons = Array(fieldCount);\n\n    const handleOnClick = useCallback((id) => {\n        console.log(id);\n        clickedButtons[id] = !clickedButtons[id];\n        console.log(clickedButtons);\n    });\n\n    const currentFields = value.gy.fields.map((item, index) => (\n        <li className=\"field-list-item\">\n            <FieldButton\n                parentClick={() => handleOnClick(index)}\n                index={index}\n                item={item}\n            ></FieldButton>\n        </li>\n    ));\n\n    const allFieldsButton = (\n        <AllFieldsButton name={allFields.value}></AllFieldsButton>\n    );\n\n    currentFields.push(allFieldsButton);\n    const refArray = Array(30);\n    let currentRef = 0;\n\n    const handleRightClick = () => {\n        if (currentRef > 0 && refArray[currentRef - 1] !== null) {\n            refArray[currentRef - 1].current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"start\",\n            });\n            currentRef--;\n        }\n    };\n\n    const handleLeftClick = () => {\n        if (currentRef < 29 && refArray[currentRef + 1] !== null) {\n            refArray[currentRef + 1].current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"start\",\n            });\n            currentRef++;\n        }\n    };\n\n    const dateArray = returnDates().map((date, index) => {\n        const ref = React.createRef();\n        refArray[index] = ref;\n        const key = index;\n\n        return (\n            <li className=\"date-list-item\" ref={ref} dbdate={date.dbValue}>\n                {date.display}\n            </li>\n        );\n    });\n\n    const registerWork = async (e) => {\n        e.preventDefault();\n        let updateArray = Array();\n        if (allClicked == 2) {\n            clickedButtons.fill(true);\n        }\n        for (let i = 0; i < value.gy.fields.length; i++) {\n            if (clickedButtons[i] == true) updateArray.push(value.gy.fields[i]);\n        }\n        const completedDate = dateArray[currentRef].props.dbdate;\n        const dbActivity = activity.dbValue;\n\n        //should do it all in one call\n        if (activity.tag == \"field\") {\n            for (let u in updateArray) {\n                try {\n                    const body = { dbActivity, completedDate };\n\n                    const response = await fetch(\n                        `http://138.68.88.7:5000/fields/${value.gy.id}/${updateArray[u]}`,\n                        {\n                            method: \"PUT\",\n                            headers: { \"Content-Type\": \"application/json\" },\n                            body: JSON.stringify(body),\n                        }\n                    );\n                    console.log(body);\n                } catch (err) {\n                    console.log(err.message);\n                }\n            }\n        } else {\n            try {\n                const body = { dbActivity, completedDate };\n\n                const response = await fetch(\n                    `http://138.68.88.7:5000/graveyards/${value.gy.id}`,\n                    {\n                        method: \"PUT\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify(body),\n                    }\n                );\n                console.log(body);\n            } catch (err) {\n                console.log(err.message);\n            }\n        }\n        exit();\n    };\n\n    useEffect(() => {}, [dia]);\n\n    if (dia) {\n        return (\n            <div className=\"work-window\">\n                <div className=\"work-window-header\">\n                    <p className=\"work-window-text\">\n                        Velg felter der det har blitt{\" \"}\n                        {activity.value.toLowerCase()}{\" \"}\n                    </p>\n                    <img src={activity.img} className=\"work-window-img\"></img>\n                </div>\n                <div className=\"work-window-img-holder\">\n                    <img src={value.gy.img} className=\"work-window-gy\"></img>\n                </div>\n                <div className=\"work-window-field-container\">\n                    <ul className=\"work-window-field-list\">{currentFields}</ul>\n                </div>\n                <div className=\"date-selection-box\">\n                    <p>Velg utført dato</p>\n                    <div className=\"date-finished-container\">\n                        <img\n                            src={leftArrow}\n                            onClick={handleLeftClick}\n                            className=\"left-arrow\"\n                        ></img>\n\n                        <ul className=\"date-list\">{dateArray}</ul>\n                        <img\n                            src={rightArrow}\n                            onClick={handleRightClick}\n                            className=\"right-arrow\"\n                        ></img>\n                    </div>\n                    <div className=\"work-window-footer\">\n                        <div className=\"work-window-cancel\" onClick={exit}>\n                            Avbryt\n                        </div>\n                        <div\n                            className=\"work-window-register\"\n                            onClick={registerWork}\n                        >\n                            Registrer\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\nexport default WorkWindow;\n"]},"metadata":{},"sourceType":"module"}