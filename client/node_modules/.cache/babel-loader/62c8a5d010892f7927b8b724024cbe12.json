{"ast":null,"code":"var _jsxFileName = \"/mnt/d/web/graveyardApp/client/src/components/TaskList.js\";\nimport React, { useState, useContext, Fragment, useCallback, useEffect } from \"react\";\nimport WorkWindow from \"./WorkWindow\";\nimport AddProject from \"./AddProject\";\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { GlobalEdit } from \"../contexts/GlobalEdit\";\nimport { FieldButtons } from \"../contexts/FieldButtons\";\nimport { PriorityButtonContext } from \"../contexts/PriorityButtonContext\";\nimport { graveyards, fieldActivities, globalActivities, extraActivities } from \"../utilities/GraveyardInfo\";\n\nconst TaskList = () => {\n  const {\n    value,\n    setValue\n  } = useContext(GlobalContext);\n  const {\n    edit,\n    setEdit\n  } = useContext(GlobalEdit);\n  const {\n    allClicked,\n    setAllClicked\n  } = useContext(FieldButtons);\n  const [priorityNum, setPriorityNum] = useState(null);\n  const [projectWindow, setProjectWindow] = useState(false);\n  const [dialog, setDialog] = useState(false);\n  const [selectedActivity, setSelectedActivity] = useState(null);\n\n  const toggleEdit = () => {\n    setEdit(!edit);\n  };\n\n  const exitDialog = () => {\n    if (dialog) {\n      setDialog(!dialog);\n      setAllClicked(1);\n    }\n  };\n\n  const setActivity = activity => {\n    setSelectedActivity(activity);\n  };\n\n  const openActivity = useCallback(activity => {\n    setActivity(activity);\n    console.log(\"dialog clicked\");\n    setDialog(!dialog);\n  });\n  const openProjects = useCallback(() => {\n    setProjectWindow(!projectWindow);\n    setPriorityNum(null);\n\n    if (dialog) {\n      setDialog(!dialog);\n      setAllClicked(1);\n    }\n\n    console.log(\"project clicked\");\n  });\n  const weeklyActivities = fieldActivities.map((activity, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"input-activity-listitem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => openActivity(activity),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-img-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"input-img\",\n    src: activity.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-text-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, activity.value)))));\n  const generalActivities = globalActivities.map(activity => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"input-activity-listitem\",\n    onClick: () => openActivity(activity),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-img-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"input-img\",\n    src: activity.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-text-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, activity.value)))));\n  const extras = extraActivities.map(activity => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"input-activity-listitem\",\n    onClick: () => openActivity(activity),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-img-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"input-img\",\n    src: activity.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-text-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, activity.value)))));\n  useEffect(() => {}, [dialog]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: dialog ? \"input-container-dimmed\" : \"input-container\" // onClick={() => exitDialog()}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"extra-activities-button\",\n    onClick: openProjects,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"Legg til prosjekt\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"back-button\",\n    onClick: () => toggleEdit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Tilbake\")), /*#__PURE__*/React.createElement(PriorityButtonContext.Provider, {\n    value: {\n      priorityNum,\n      setPriorityNum\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddProject, {\n    exit: openProjects,\n    project: projectWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(WorkWindow, {\n    exit: exitDialog,\n    dia: dialog,\n    activity: selectedActivity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \"Velg utf\\xF8rt aktivitet \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 43\n    }\n  }, \"(\", value.gy.value, \")\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"input-activity-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, weeklyActivities, generalActivities, extras)));\n};\n\nexport default TaskList;","map":{"version":3,"sources":["/mnt/d/web/graveyardApp/client/src/components/TaskList.js"],"names":["React","useState","useContext","Fragment","useCallback","useEffect","WorkWindow","AddProject","GlobalContext","GlobalEdit","FieldButtons","PriorityButtonContext","graveyards","fieldActivities","globalActivities","extraActivities","TaskList","value","setValue","edit","setEdit","allClicked","setAllClicked","priorityNum","setPriorityNum","projectWindow","setProjectWindow","dialog","setDialog","selectedActivity","setSelectedActivity","toggleEdit","exitDialog","setActivity","activity","openActivity","console","log","openProjects","weeklyActivities","map","index","img","generalActivities","extras","gy"],"mappings":"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","sourcesContent":["import React, {\n    useState,\n    useContext,\n    Fragment,\n    useCallback,\n    useEffect,\n} from \"react\";\nimport WorkWindow from \"./WorkWindow\";\nimport AddProject from \"./AddProject\";\n\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { GlobalEdit } from \"../contexts/GlobalEdit\";\nimport { FieldButtons } from \"../contexts/FieldButtons\";\nimport { PriorityButtonContext } from \"../contexts/PriorityButtonContext\";\n\nimport {\n    graveyards,\n    fieldActivities,\n    globalActivities,\n    extraActivities,\n} from \"../utilities/GraveyardInfo\";\n\nconst TaskList = () => {\n    const { value, setValue } = useContext(GlobalContext);\n    const { edit, setEdit } = useContext(GlobalEdit);\n    const { allClicked, setAllClicked } = useContext(FieldButtons);\n\n    const [priorityNum, setPriorityNum] = useState(null);\n\n    const [projectWindow, setProjectWindow] = useState(false);\n    const [dialog, setDialog] = useState(false);\n    const [selectedActivity, setSelectedActivity] = useState(null);\n\n    const toggleEdit = () => {\n        setEdit(!edit);\n    };\n\n    const exitDialog = () => {\n        if (dialog) {\n            setDialog(!dialog);\n            setAllClicked(1);\n        }\n    };\n\n    const setActivity = (activity) => {\n        setSelectedActivity(activity);\n    };\n\n    const openActivity = useCallback((activity) => {\n        setActivity(activity);\n        console.log(\"dialog clicked\");\n        setDialog(!dialog);\n    });\n\n    const openProjects = useCallback(() => {\n        setProjectWindow(!projectWindow);\n        setPriorityNum(null);\n        if (dialog) {\n            setDialog(!dialog);\n            setAllClicked(1);\n        }\n\n        console.log(\"project clicked\");\n    });\n\n    const weeklyActivities = fieldActivities.map((activity, index) => (\n        <li className=\"input-activity-listitem\">\n            <div onClick={() => openActivity(activity)}>\n                <div className=\"input-img-holder\">\n                    <img className=\"input-img\" src={activity.img}></img>\n                </div>\n                <div className=\"input-text-holder\">\n                    <p>{activity.value}</p>\n                </div>\n            </div>\n        </li>\n    ));\n\n    const generalActivities = globalActivities.map((activity) => (\n        <li\n            className=\"input-activity-listitem\"\n            onClick={() => openActivity(activity)}\n        >\n            <div>\n                <div className=\"input-img-holder\">\n                    <img className=\"input-img\" src={activity.img}></img>\n                </div>\n\n                <div className=\"input-text-holder\">\n                    <p>{activity.value}</p>\n                </div>\n            </div>\n        </li>\n    ));\n\n    const extras = extraActivities.map((activity) => (\n        <li\n            className=\"input-activity-listitem\"\n            onClick={() => openActivity(activity)}\n        >\n            <div>\n                <div className=\"input-img-holder\">\n                    <img className=\"input-img\" src={activity.img}></img>\n                </div>\n                <div className=\"input-text-holder\">\n                    <p>{activity.value}</p>\n                </div>\n            </div>\n        </li>\n    ));\n\n    useEffect(() => {}, [dialog]);\n\n    return (\n        <div\n            className={dialog ? \"input-container-dimmed\" : \"input-container\"}\n            // onClick={() => exitDialog()}\n        >\n            <div className=\"input-button-container\">\n                <div className=\"extra-activities-button\" onClick={openProjects}>\n                    Legg til prosjekt\n                </div>\n                <div className=\"back-button\" onClick={() => toggleEdit()}>\n                    Tilbake\n                </div>\n            </div>\n            <PriorityButtonContext.Provider\n                value={{ priorityNum, setPriorityNum }}\n            >\n                <AddProject exit={openProjects} project={projectWindow} />\n            </PriorityButtonContext.Provider>\n\n            <WorkWindow\n                exit={exitDialog}\n                dia={dialog}\n                activity={selectedActivity}\n            />\n            <div className=\"task-list-title\">\n                <p>\n                    Velg utført aktivitet <span>({value.gy.value})</span>\n                </p>\n            </div>\n\n            <div className=\"input-list-container\">\n                <ul className=\"input-activity-list\">\n                    {weeklyActivities}\n                    {generalActivities}\n                    {extras}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}