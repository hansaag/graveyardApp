{"ast":null,"code":"var _jsxFileName = \"/Users/Hansi/Desktop/gardener/client/src/components/Activities.js\";\nimport React, { useState, useContext, Fragment, useCallback, useEffect } from \"react\";\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { ProjectContext } from \"../contexts/ProjectContext\";\nimport JsonActivities, { cleanProjects } from \"../utilities/JsonActivities\";\nimport ProjectInfo from \"./ProjectInfo\";\n\nconst Activities = () => {\n  const {\n    value,\n    setValue\n  } = useContext(GlobalContext);\n  const [activities, setActivities] = useState([]);\n  const [viewProject, setViewProject] = useState(null);\n  let projectContainer;\n  let currentProject;\n  const getProjectData = useCallback(projArr => {\n    projectContainer = projArr;\n    console.log(projectContainer);\n    return projArr;\n  });\n  const toggleProject = useCallback(activity => {\n    console.log(activity);\n\n    if (activity != viewProject) {\n      setViewProject(activity);\n    } else {\n      setViewProject(null);\n    }\n  });\n  useEffect(() => {\n    fetch(`http://138.68.88.7:5000/projects/${value.gy.id}`).then(response => response.json()).then(sendData => getProjectData(sendData)).then(cleaned => setActivities(cleaned));\n  }, [value.gy.id]);\n  const fields = activities.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"activity-list-item\",\n    onClick: () => toggleProject(activities[index]),\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"activity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, item.project_title)));\n  return /*#__PURE__*/React.createElement(ProjectContext.Provider, {\n    value: {\n      viewProject,\n      setViewProject\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"activity-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, fields), /*#__PURE__*/React.createElement(ProjectInfo, {\n    toggleProject: toggleProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Activities;","map":{"version":3,"sources":["/Users/Hansi/Desktop/gardener/client/src/components/Activities.js"],"names":["React","useState","useContext","Fragment","useCallback","useEffect","GlobalContext","ProjectContext","JsonActivities","cleanProjects","ProjectInfo","Activities","value","setValue","activities","setActivities","viewProject","setViewProject","projectContainer","currentProject","getProjectData","projArr","console","log","toggleProject","activity","fetch","gy","id","then","response","json","sendData","cleaned","fields","map","item","index","project_title"],"mappings":";AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,SALF,QAMO,OANP;AAOA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AAEA,OAAOC,cAAP,IAAyBC,aAAzB,QAA8C,6BAA9C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBX,UAAU,CAACI,aAAD,CAAtC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,IAAD,CAA9C;AAEA,MAAIiB,gBAAJ;AAEA,MAAIC,cAAJ;AACA,QAAMC,cAAc,GAAGhB,WAAW,CAAEiB,OAAD,IAAa;AAC9CH,IAAAA,gBAAgB,GAAGG,OAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,gBAAZ;AACA,WAAOG,OAAP;AACD,GAJiC,CAAlC;AAMA,QAAMG,aAAa,GAAGpB,WAAW,CAAEqB,QAAD,IAAc;AAC9CH,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;;AACA,QAAIA,QAAQ,IAAIT,WAAhB,EAA6B;AAC3BC,MAAAA,cAAc,CAACQ,QAAD,CAAd;AACD,KAFD,MAEO;AACLR,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GAPgC,CAAjC;AASAZ,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,KAAK,CAAE,oCAAmCd,KAAK,CAACe,EAAN,CAASC,EAAG,EAAjD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,QAAD,IAAcZ,cAAc,CAACY,QAAD,CAFpC,EAGGH,IAHH,CAGSI,OAAD,IAAalB,aAAa,CAACkB,OAAD,CAHlC;AAID,GALQ,EAKN,CAACrB,KAAK,CAACe,EAAN,CAASC,EAAV,CALM,CAAT;AAOA,QAAMM,MAAM,GAAGpB,UAAU,CAACqB,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBAC5B;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,OAAO,EAAE,MAAMb,aAAa,CAACV,UAAU,CAACuB,KAAD,CAAX,CAF9B;AAGE,IAAA,GAAG,EAAEA,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBD,IAAI,CAACE,aAA9B,CALF,CADa,CAAf;AAUA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEtB,MAAAA,WAAF;AAAeC,MAAAA;AAAf,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BiB,MAA/B,CADJ,eAEI,oBAAC,WAAD;AAAa,IAAA,aAAa,EAAEV,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAMD,CA9CD;;AAgDA,eAAeb,UAAf","sourcesContent":["import React, {\n  useState,\n  useContext,\n  Fragment,\n  useCallback,\n  useEffect,\n} from \"react\";\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { ProjectContext } from \"../contexts/ProjectContext\";\n\nimport JsonActivities, { cleanProjects } from \"../utilities/JsonActivities\";\nimport ProjectInfo from \"./ProjectInfo\";\n\nconst Activities = () => {\n  const { value, setValue } = useContext(GlobalContext);\n  const [activities, setActivities] = useState([]);\n  const [viewProject, setViewProject] = useState(null);\n\n  let projectContainer;\n\n  let currentProject;\n  const getProjectData = useCallback((projArr) => {\n    projectContainer = projArr;\n    console.log(projectContainer);\n    return projArr;\n  });\n\n  const toggleProject = useCallback((activity) => {\n    console.log(activity);\n    if (activity != viewProject) {\n      setViewProject(activity);\n    } else {\n      setViewProject(null);\n    }\n  });\n\n  useEffect(() => {\n    fetch(`http://138.68.88.7:5000/projects/${value.gy.id}`)\n      .then((response) => response.json())\n      .then((sendData) => getProjectData(sendData))\n      .then((cleaned) => setActivities(cleaned));\n  }, [value.gy.id]);\n\n  const fields = activities.map((item, index) => (\n    <li\n      className=\"activity-list-item\"\n      onClick={() => toggleProject(activities[index])}\n      key={index}\n    >\n      <a className=\"activity\">{item.project_title}</a>\n    </li>\n  ));\n\n  return (\n    <ProjectContext.Provider value={{ viewProject, setViewProject }}>\n        <ul className=\"activity-list\">{fields}</ul>\n        <ProjectInfo toggleProject={toggleProject} />\n    </ProjectContext.Provider>\n  );\n};\n\nexport default Activities;\n"]},"metadata":{},"sourceType":"module"}