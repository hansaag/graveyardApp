{"ast":null,"code":"var _jsxFileName = \"/mnt/d/web/graveyardApp/client/src/components/MenuFieldButton.js\";\nimport React, { useState, useContext, Fragment, useEffect, memo, useCallback } from \"react\";\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nexport const MenuFieldButton = ({\n  item,\n  index\n}) => {\n  const [active, SetActive] = useState(false);\n  const {\n    value,\n    setValue\n  } = useContext(GlobalContext);\n  let lastfield = value.field;\n  const thisField = value.gy.fields[index];\n\n  const handleOnClick = () => {\n    setValue(prev => {\n      return { ...prev,\n        field: item\n      };\n    });\n  };\n\n  useEffect(() => {\n    if (thisField == value.field) {\n      SetActive(true);\n    } else SetActive(false);\n  }, [value.field == thisField || thisField]);\n  if (active) return /*#__PURE__*/React.createElement(\"a\", {\n    className: \"round-button-menu-active\",\n    onClick: handleOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, thisField);else return /*#__PURE__*/React.createElement(\"a\", {\n    className: \"round-button-menu-inactive\",\n    onClick: handleOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, thisField);\n};\nexport default MenuFieldButton;","map":{"version":3,"sources":["/mnt/d/web/graveyardApp/client/src/components/MenuFieldButton.js"],"names":["React","useState","useContext","Fragment","useEffect","memo","useCallback","GlobalContext","MenuFieldButton","item","index","active","SetActive","value","setValue","lastfield","field","thisField","gy","fields","handleOnClick","prev"],"mappings":";AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,WANF,QAOO,OAPP;AASA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAClD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAEY,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBZ,UAAU,CAACK,aAAD,CAAtC;AACA,MAAIQ,SAAS,GAAGF,KAAK,CAACG,KAAtB;AACA,QAAMC,SAAS,GAAGJ,KAAK,CAACK,EAAN,CAASC,MAAT,CAAgBT,KAAhB,CAAlB;;AAEA,QAAMU,aAAa,GAAG,MAAM;AAC1BN,IAAAA,QAAQ,CAAEO,IAAD,IAAU;AACjB,aAAO,EAAE,GAAGA,IAAL;AAAWL,QAAAA,KAAK,EAAEP;AAAlB,OAAP;AACD,KAFO,CAAR;AAGD,GAJD;;AAMAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,SAAS,IAAIJ,KAAK,CAACG,KAAvB,EAA8B;AAC5BJ,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFD,MAEOA,SAAS,CAAC,KAAD,CAAT;AACR,GAJQ,EAIN,CAACC,KAAK,CAACG,KAAN,IAAeC,SAAf,IAA4BA,SAA7B,CAJM,CAAT;AAMA,MAAIN,MAAJ,EACE,oBACE;AAAG,IAAA,SAAS,EAAC,0BAAb;AAAwC,IAAA,OAAO,EAAES,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,SADH,CADF,CADF,KAOE,oBACE;AAAG,IAAA,SAAS,EAAC,4BAAb;AAA0C,IAAA,OAAO,EAAEG,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,SADH,CADF;AAKH,CA9BM;AAgCP,eAAeT,eAAf","sourcesContent":["import React, {\n  useState,\n  useContext,\n  Fragment,\n  useEffect,\n  memo,\n  useCallback,\n} from \"react\";\n\nimport { GlobalContext } from \"../contexts/GlobalContext\";\n\nexport const MenuFieldButton = ({ item, index }) => {\n  const [active, SetActive] = useState(false);\n  const { value, setValue } = useContext(GlobalContext);\n  let lastfield = value.field;\n  const thisField = value.gy.fields[index];\n\n  const handleOnClick = () => {\n    setValue((prev) => {\n      return { ...prev, field: item };\n    });\n  };\n\n  useEffect(() => {\n    if (thisField == value.field) {\n      SetActive(true);\n    } else SetActive(false);\n  }, [value.field == thisField || thisField]);\n\n  if (active)\n    return (\n      <a className=\"round-button-menu-active\" onClick={handleOnClick}>\n        {thisField}\n      </a>\n    );\n  else\n    return (\n      <a className=\"round-button-menu-inactive\" onClick={handleOnClick}>\n        {thisField}\n      </a>\n    );\n};\n\nexport default MenuFieldButton;\n"]},"metadata":{},"sourceType":"module"}