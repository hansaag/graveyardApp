{"ast":null,"code":"var _jsxFileName = \"/Users/Hansi/Desktop/gardener/client/src/components/ProjectInfo.js\";\nimport React, { useState, useContext, Fragment, useEffect } from \"react\";\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { GlobalEdit } from \"../contexts/GlobalEdit\";\nimport JsonActivities, { cleanComments } from \"../utilities/JsonActivities\";\nimport { ProjectContext } from \"../contexts/ProjectContext\";\nimport Comments from \"./Comments\";\n\nconst ProjectInfo = ({\n  toggleProject\n}) => {\n  let newComment;\n  const {\n    value,\n    setValue\n  } = useContext(GlobalContext);\n  const [commentsRendered, setCommentsRendered] = useState(false);\n  const {\n    viewProject,\n    setViewProject\n  } = useContext(ProjectContext);\n  let id = value.gy.id;\n  let view;\n  let proj = viewProject;\n\n  const addComment = async () => {\n    newComment = document.getElementById(\"project-textarea\").value;\n    let projNr = proj.project_id;\n\n    try {\n      const body = {\n        id,\n        projNr,\n        newComment\n      };\n      console.log(body);\n      const response = await fetch(`http://localhost:5000/comments`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  if (proj) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-title-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, proj.project_title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-descr-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Tilleggsinformasjon\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"project-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, proj.project_descr)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-completion-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Kommentarer\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      classname: \"comment-textarea\",\n      id: \"project-textarea\",\n      placeholder: \"Skriv en kommentar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: addComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Add\")));\n  } else return null;\n};\n\nexport default ProjectInfo;","map":{"version":3,"sources":["/Users/Hansi/Desktop/gardener/client/src/components/ProjectInfo.js"],"names":["React","useState","useContext","Fragment","useEffect","GlobalContext","GlobalEdit","JsonActivities","cleanComments","ProjectContext","Comments","ProjectInfo","toggleProject","newComment","value","setValue","commentsRendered","setCommentsRendered","viewProject","setViewProject","id","gy","view","proj","addComment","document","getElementById","projNr","project_id","body","console","log","response","fetch","method","headers","JSON","stringify","err","error","message","project_title","project_descr"],"mappings":"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","sourcesContent":["import React, { useState, useContext, Fragment, useEffect } from \"react\";\n\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { GlobalEdit } from \"../contexts/GlobalEdit\";\n\nimport JsonActivities, { cleanComments } from \"../utilities/JsonActivities\";\nimport { ProjectContext } from \"../contexts/ProjectContext\";\nimport Comments from \"./Comments\";\n\nconst ProjectInfo = ({ toggleProject }) => {\n  let newComment;\n  const { value, setValue } = useContext(GlobalContext);\n  const [commentsRendered, setCommentsRendered] = useState(false);\n  const { viewProject, setViewProject } = useContext(ProjectContext);\n\n  let id = value.gy.id;\n  let view;\n  let proj = viewProject;\n\n  const addComment = async () => {\n    newComment = document.getElementById(\"project-textarea\").value;\n    let projNr = proj.project_id;\n    try {\n      const body = {\n        id,\n        projNr,\n        newComment,\n      };\n      console.log(body);\n      const response = await fetch(`http://localhost:5000/comments`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  if (proj) {\n    return (\n      <div className=\"project-info-container\">\n        <div className=\"project-title-container\">\n          <p>{proj.project_title}</p>\n        </div>\n        <div className=\"project-descr-container\">\n          <p>Tilleggsinformasjon</p>\n          <p className=\"project-description\">{proj.project_descr}</p>\n        </div>\n        <div className=\"project-completion-container\"></div>\n        <div className=\"comment-list-container\">\n          <p>Kommentarer</p>\n          <div>\n            <textarea\n              classname=\"comment-textarea\"\n              id=\"project-textarea\"\n              placeholder=\"Skriv en kommentar\"\n            ></textarea>\n          </div>\n          <div onClick={addComment}>Add</div>\n        </div>\n      </div>\n    );\n  } else return null;\n};\n\nexport default ProjectInfo;\n"]},"metadata":{},"sourceType":"module"}