{"ast":null,"code":"var _jsxFileName = \"/mnt/d/web/graveyardApp/client/src/App.js\";\nimport React, { Fragment, useState, useContext, useMemo, useEffect, createContext, useCallback } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport { GlobalContext } from \"./contexts/GlobalContext\";\nimport { GlobalEdit } from \"./contexts/GlobalEdit\";\nimport { FieldButtons } from \"./contexts/FieldButtons\";\nimport { ProjectContext } from \"./contexts/ProjectContext\";\nimport { ProgressContext } from \"./contexts/ProgressContext\";\nimport { ActivityViewContext } from \"./contexts/ActivityViewContext\";\nimport Dropdown from \"./components/Dropdown\";\nimport Map from \"./components/Map\";\nimport Fields from \"./components/Fields\";\nimport InfoBox from \"./components/InfoBox\";\nimport Activities from \"./components/Activities\";\nimport RegisterWork from \"./components/RegisterWork\";\nimport TaskList from \"./components/TaskList\";\nimport ProjectInfo from \"./components/ProjectInfo\";\nimport { graveyards, weeklyActivities } from \"./utilities/GraveyardInfo\";\n\nfunction App() {\n  const [value, setValue] = useState({\n    field: \"A\",\n    gy: graveyards[1]\n  });\n  const providerValue = useMemo(() => ({\n    value,\n    setValue\n  }), [value, setValue]);\n  const [edit, setEdit] = useState(false);\n  const [allClicked, setAllClicked] = useState(1);\n  const [viewProject, setViewProject] = useState(null);\n  const [temporaryProgress, setTemporaryProgress] = useState(null);\n  const Currentfields = value.gy.fields;\n  useEffect(() => {}, [edit]); // bør kanskje legge til setMetode på value\n\n  if (!edit) {\n    return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n      value: providerValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ProjectContext.Provider, {\n      value: {\n        viewProject,\n        setViewProject\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ProgressContext.Provider, {\n      value: {\n        temporaryProgress,\n        setTemporaryProgress\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"upper-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      title: \"Velg kirkeg\\xE5rd\",\n      items: graveyards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(GlobalEdit.Provider, {\n      value: {\n        edit,\n        setEdit\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(RegisterWork, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Map, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gy-holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Fields, {\n      fields: Currentfields,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InfoBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"activity-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Activities, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    })))));\n  } else return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: providerValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GlobalEdit.Provider, {\n    value: {\n      edit,\n      setEdit\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FieldButtons.Provider, {\n    value: {\n      allClicked,\n      setAllClicked\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TaskList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/d/web/graveyardApp/client/src/App.js"],"names":["React","Fragment","useState","useContext","useMemo","useEffect","createContext","useCallback","ReactDOM","GlobalContext","GlobalEdit","FieldButtons","ProjectContext","ProgressContext","ActivityViewContext","Dropdown","Map","Fields","InfoBox","Activities","RegisterWork","TaskList","ProjectInfo","graveyards","weeklyActivities","App","value","setValue","field","gy","providerValue","edit","setEdit","allClicked","setAllClicked","viewProject","setViewProject","temporaryProgress","setTemporaryProgress","Currentfields","fields"],"mappings":"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","sourcesContent":["import React, {\n  Fragment,\n  useState,\n  useContext,\n  useMemo,\n  useEffect,\n  createContext,\n  useCallback,\n} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport { GlobalContext } from \"./contexts/GlobalContext\";\nimport { GlobalEdit } from \"./contexts/GlobalEdit\";\nimport { FieldButtons } from \"./contexts/FieldButtons\";\nimport { ProjectContext } from \"./contexts/ProjectContext\";\nimport { ProgressContext } from \"./contexts/ProgressContext\";\nimport { ActivityViewContext } from \"./contexts/ActivityViewContext\";\n\nimport Dropdown from \"./components/Dropdown\";\nimport Map from \"./components/Map\";\nimport Fields from \"./components/Fields\";\nimport InfoBox from \"./components/InfoBox\";\nimport Activities from \"./components/Activities\";\nimport RegisterWork from \"./components/RegisterWork\";\nimport TaskList from \"./components/TaskList\";\nimport ProjectInfo from \"./components/ProjectInfo\";\n\nimport { graveyards, weeklyActivities } from \"./utilities/GraveyardInfo\";\n\nfunction App() {\n  const [value, setValue] = useState({ field: \"A\", gy: graveyards[1] });\n  const providerValue = useMemo(() => ({ value, setValue }), [value, setValue]);\n  const [edit, setEdit] = useState(false);\n  const [allClicked, setAllClicked] = useState(1);\n  const [viewProject, setViewProject] = useState(null);\n  const [temporaryProgress, setTemporaryProgress] = useState(null);\n\n  const Currentfields = value.gy.fields;\n\n  useEffect(() => {}, [edit]);\n\n  // bør kanskje legge til setMetode på value\n  if (!edit) {\n    return (\n      <GlobalContext.Provider value={providerValue}>\n        <ProjectContext.Provider value={{ viewProject, setViewProject }}>\n          <ProgressContext.Provider\n            value={{ temporaryProgress, setTemporaryProgress }}\n          >\n            <div className=\"container\">\n              <div className=\"upper-bar\">\n                <Dropdown title=\"Velg kirkegård\" items={graveyards} />\n                <GlobalEdit.Provider value={{ edit, setEdit }}>\n                  <RegisterWork />\n                </GlobalEdit.Provider>\n              </div>\n\n              <Map />\n              <div className=\"gy-holder\">\n                <Fields fields={Currentfields} />\n                <InfoBox />\n              </div>\n            </div>\n            <div className=\"activity-box\">\n              <Activities />\n            </div>\n          </ProgressContext.Provider>\n        </ProjectContext.Provider>\n      </GlobalContext.Provider>\n    );\n  } else\n    return (\n      <GlobalContext.Provider value={providerValue}>\n        <GlobalEdit.Provider value={{ edit, setEdit }}>\n          <div className=\"input-body\">\n            <FieldButtons.Provider value={{ allClicked, setAllClicked }}>\n              <TaskList />\n            </FieldButtons.Provider>\n          </div>\n        </GlobalEdit.Provider>\n      </GlobalContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}