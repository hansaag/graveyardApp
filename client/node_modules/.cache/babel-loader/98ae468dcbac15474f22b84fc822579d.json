{"ast":null,"code":"var _jsxFileName = \"/home/hans/dev/personlig/graveyardApp/client/src/components/InfoBox.js\";\nimport React, { useState, useContext, useEffect, Fragment } from \"react\";\nimport { useSwipeable, Swipeable } from 'react-swipeable';\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport JsonActivities, { cleanActivities, findTimeDiff, cleanGlobalActivities } from \"../utilities/JsonActivities\";\nimport { graveyards, fieldActivities, globalActivities } from \"../utilities/GraveyardInfo\";\nimport { chosenConnection } from \"../utilities/Connections\"; //brukes for Ã¥ time feltskiftet med innlastning\n\nlet currentField = \"A\";\n\nconst InfoBox = ({\n  item\n}) => {\n  const {\n    value,\n    setValue\n  } = useContext(GlobalContext);\n  const [items, setItems] = useState([]);\n  const [rightItems, setRightItems] = useState([]);\n  useEffect(() => {\n    setValue(prev => {\n      return { ...prev,\n        field: \"A\"\n      };\n    }); //kanseller tidligere asynkrone kall her\n\n    setRightItems([]);\n    fetch(`${chosenConnection}/graveyards/${value.gy.id}`).then(response => response.json()).then(json => cleanGlobalActivities(json)).then(cleaned => setRightItems(cleaned));\n  }, [value.gy.id]);\n  useEffect(() => {\n    fetch(`${chosenConnection}/fields/${value.gy.id}/${value.field}`).then(response => response.json()).then(json => cleanActivities(json)).then(cleaned => setItems(cleaned));\n    currentField = value.field;\n  }, [value]); // index.js:1 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\n  // in InfoBox (at App.js:47)\n  // in div (at App.js:45)\n  // in div (at App.js:36)   ***ved spamming av felter***\n\n  const left = fieldActivities.filter((ele, index) => {\n    return index < 3;\n  });\n  const right = fieldActivities.filter((ele, index) => {\n    return index > 2 && index < 6;\n  });\n  const showGlobalActivities = globalActivities.map((activity, index) => {\n    const timeElapsed = findTimeDiff(rightItems[index]);\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"infobox-listitem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"global-activity-icon\",\n      src: activity.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"pre\", {\n      className: `infobox-status-text ${activity.yellow < timeElapsed ? \"show-yellow-text\" : \"\"}\n            ${activity.red < timeElapsed ? \"show-red-text\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, timeElapsed, \"\\xA0dager\")));\n  });\n  const showActivities1 = left.map((activity, index) => {\n    const timeElapsed = findTimeDiff(items[index]);\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"left-activity-listitem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"infobox-listitem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"activity-icon\",\n      src: activity.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"pre\", {\n      className: `infobox-status-text ${activity.yellow < timeElapsed ? \"show-yellow-text\" : \"\"}\n            ${activity.red < timeElapsed ? \"show-red-text\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, timeElapsed, \"\\xA0dager\")));\n  });\n  const showActivities2 = right.map((activity, index) => {\n    const timeElapsed = findTimeDiff(items[index + 3]);\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"right-activity-listitem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"infobox-listitem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"activity-icon\",\n      src: activity.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"pre\", {\n      className: `infobox-status-text ${activity.yellow < timeElapsed ? \"show-yellow-text\" : \"\"}\n            ${activity.red < timeElapsed ? \"show-red-text\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, timeElapsed, \"\\xA0dager\")));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infobox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infobox-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \" FELT: \", currentField), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infobox-left-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"infobox-list1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, showActivities1), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"infobox-list2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, showActivities2))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infobox-right \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"ALLE FELT\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infobox-right-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"infobox-list3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, showGlobalActivities))));\n};\n\nexport default InfoBox;","map":{"version":3,"sources":["/home/hans/dev/personlig/graveyardApp/client/src/components/InfoBox.js"],"names":["React","useState","useContext","useEffect","Fragment","useSwipeable","Swipeable","GlobalContext","JsonActivities","cleanActivities","findTimeDiff","cleanGlobalActivities","graveyards","fieldActivities","globalActivities","chosenConnection","currentField","InfoBox","item","value","setValue","items","setItems","rightItems","setRightItems","prev","field","fetch","gy","id","then","response","json","cleaned","left","filter","ele","index","right","showGlobalActivities","map","activity","timeElapsed","img","yellow","red","showActivities1","showActivities2"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, Fragment } from \"react\";\nimport { useSwipeable, Swipeable } from 'react-swipeable'\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport JsonActivities, {\n  cleanActivities,\n  findTimeDiff,\n  cleanGlobalActivities,\n} from \"../utilities/JsonActivities\";\nimport {\n  graveyards,\n  fieldActivities,\n  globalActivities,\n} from \"../utilities/GraveyardInfo\";\nimport { chosenConnection } from \"../utilities/Connections\";\n\n//brukes for Ã¥ time feltskiftet med innlastning\n\nlet currentField = \"A\";\n\nconst InfoBox = ({ item }) => {\n  const { value, setValue } = useContext(GlobalContext);\n  const [items, setItems] = useState([]);\n  const [rightItems, setRightItems] = useState([]);\n\n  useEffect(() => {\n    setValue((prev) => {\n      return { ...prev, field: \"A\" };\n    });\n    //kanseller tidligere asynkrone kall her\n\n    setRightItems([]);\n\n    fetch(`${chosenConnection}/graveyards/${value.gy.id}`)\n      .then((response) => response.json())\n      .then((json) => cleanGlobalActivities(json))\n      .then((cleaned) => setRightItems(cleaned));\n  }, [value.gy.id]);\n\n  useEffect(() => {\n    fetch(`${chosenConnection}/fields/${value.gy.id}/${value.field}`)\n      .then((response) => response.json())\n      .then((json) => cleanActivities(json))\n      .then((cleaned) => setItems(cleaned));\n    currentField = value.field;\n  }, [value]);\n\n  // index.js:1 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\n  // in InfoBox (at App.js:47)\n  // in div (at App.js:45)\n  // in div (at App.js:36)   ***ved spamming av felter***\n\n  const left = fieldActivities.filter((ele, index) => {\n    return index < 3;\n  });\n\n  const right = fieldActivities.filter((ele, index) => {\n    return index > 2 && index < 6;\n  });\n\n  const showGlobalActivities = globalActivities.map((activity, index) => {\n    const timeElapsed = findTimeDiff(rightItems[index]);\n    return (\n      <li>\n        <div className=\"infobox-listitem\">\n          <img className=\"global-activity-icon\" src={activity.img}></img>\n          <pre\n            className={`infobox-status-text ${\n              activity.yellow < timeElapsed ? \"show-yellow-text\" : \"\"\n              }\n            ${activity.red < timeElapsed ? \"show-red-text\" : \"\"}`}\n          >\n            {timeElapsed}\n            &nbsp;dager\n          </pre>\n        </div>\n      </li>\n    );\n  });\n\n  const showActivities1 = left.map((activity, index) => {\n    const timeElapsed = findTimeDiff(items[index]);\n    return (\n      <li className=\"left-activity-listitem\">\n        <div className=\"infobox-listitem\">\n          <img className=\"activity-icon\" src={activity.img}></img>\n          <pre\n            className={`infobox-status-text ${\n              activity.yellow < timeElapsed ? \"show-yellow-text\" : \"\"\n              }\n            ${activity.red < timeElapsed ? \"show-red-text\" : \"\"}`}\n          >\n            {timeElapsed}\n            &nbsp;dager\n          </pre>\n        </div>\n      </li>\n    );\n  });\n\n  const showActivities2 = right.map((activity, index) => {\n    const timeElapsed = findTimeDiff(items[index + 3]);\n    return (\n      <li className=\"right-activity-listitem\">\n        <div className=\"infobox-listitem\">\n          <img className=\"activity-icon\" src={activity.img}></img>\n          <pre\n            className={`infobox-status-text ${\n              activity.yellow < timeElapsed ? \"show-yellow-text\" : \"\"\n              }\n            ${activity.red < timeElapsed ? \"show-red-text\" : \"\"}`}\n          >\n            {timeElapsed}\n            &nbsp;dager\n          </pre>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"infobox\">\n      <div className=\"infobox-left\">\n        <h2> FELT: {currentField}</h2>\n        <div className=\"infobox-left-items\">\n          <ul className=\"infobox-list1\">{showActivities1}</ul>\n          <ul className=\"infobox-list2\">{showActivities2}</ul>\n        </div>\n      </div>\n      <div className=\"infobox-right \">\n        <h2>ALLE FELT</h2>\n        <div className=\"infobox-right-items\">\n          <ul className=\"infobox-list3\">{showGlobalActivities}</ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InfoBox;\n"]},"metadata":{},"sourceType":"module"}