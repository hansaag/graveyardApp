{"ast":null,"code":"var _jsxFileName = \"/Users/Hansi/Desktop/gardener/client/src/components/ProjectInfo.js\";\nimport React, { useState, useContext, Fragment, useEffect } from \"react\";\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { GlobalEdit } from \"../contexts/GlobalEdit\";\nimport JsonActivities, { cleanComments } from \"../utilities/JsonActivities\";\nimport { ProjectContext } from \"../contexts/ProjectContext\";\nimport { ProgressContext } from \"../contexts/ProgressContext\";\nimport { ProgressBar } from \"./ProgressBar\";\n\nconst ProjectInfo = () => {\n  let newComment;\n  const {\n    value,\n    setValue\n  } = useContext(GlobalContext);\n  const {\n    viewProject,\n    setViewProject\n  } = useContext(ProjectContext);\n  const {\n    temporaryProgress,\n    setTemporaryProgress\n  } = useContext(ProgressContext);\n  const [commentsRendered, setCommentsRendered] = useState([]);\n  const [newlyAddedComment, setNewlyAddedComment] = useState(false);\n  const [input, setInput] = useState(false);\n\n  const registerInput = e => {\n    console.log(e.target.value);\n\n    if (e.target.value.length < 5) {\n      setInput(false);\n    } else setInput(true);\n  };\n\n  let id = value.gy.id;\n\n  const renderComments = arr => {\n    let fetchedComments = arr.map(it => {\n      let dateEntry = it[\"added\"].substring(8, 10) + \".\" + it[\"added\"].substring(5, 7);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, \"- \\xA0\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comment-date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, dateEntry), \": \\xA0\", it[\"comment\"]));\n    });\n    console.log(fetchedComments);\n    setCommentsRendered(fetchedComments);\n  };\n\n  const getComments = async () => {\n    try {\n      await fetch(`http://138.68.88.7:5000/comments/${id}/${viewProject[\"project_id\"]}`).then(res => res.json()).then(json => renderComments(json));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const addComment = async () => {\n    newComment = document.getElementById(\"project-textarea\").value;\n    console.log(newComment.length);\n    if (newComment.length < 5) return;\n    let ser = viewProject.project_id;\n\n    try {\n      const body = {\n        id,\n        ser,\n        newComment\n      };\n      console.log(body);\n      const response = await fetch(`http://138.68.88.7:5000/comments`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      document.getElementById(\"project-textarea\").value = null;\n      setNewlyAddedComment(true);\n      setInput(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const increaseProgress = () => {\n    setTemporaryProgress(prev => {\n      if (temporaryProgress == null) {\n        temporaryProgress = viewProject.percent_finished + 5;\n      } else {\n        temporaryProgress = prev + 5;\n      }\n    });\n  };\n\n  useEffect(() => {\n    setCommentsRendered([]);\n    getComments();\n  }, [viewProject]);\n  useEffect(() => {\n    getComments();\n    setNewlyAddedComment(false);\n  }, [newlyAddedComment]);\n\n  if (viewProject) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-title-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-visual-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-prio-visual\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, \"P\", viewProject.project_prio)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, viewProject.project_title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ProgressBar, {\n      done: viewProject.percent_finished,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-input\",\n      onClick: increaseProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-descr-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"project-description-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, \"Tilleggsinformasjon\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"project-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, viewProject.project_descr)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-completion-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"comment-list-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, \"Kommentarer\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"comment-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, commentsRendered), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"comment-textarea\",\n      id: \"project-textarea\",\n      placeholder: \"Skriv en kommentar \\r\\n(minst 4 tegn)\",\n      onChange: e => registerInput(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `add-comment-button ${input ? \"show\" : \"\"}`,\n      id: \"submit-comment\",\n      onClick: addComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, \"+\"))));\n  } else return null;\n};\n\nexport default ProjectInfo;","map":{"version":3,"sources":["/Users/Hansi/Desktop/gardener/client/src/components/ProjectInfo.js"],"names":["React","useState","useContext","Fragment","useEffect","GlobalContext","GlobalEdit","JsonActivities","cleanComments","ProjectContext","ProgressContext","ProgressBar","ProjectInfo","newComment","value","setValue","viewProject","setViewProject","temporaryProgress","setTemporaryProgress","commentsRendered","setCommentsRendered","newlyAddedComment","setNewlyAddedComment","input","setInput","registerInput","e","console","log","target","length","id","gy","renderComments","arr","fetchedComments","map","it","dateEntry","substring","getComments","fetch","then","res","json","err","error","message","addComment","document","getElementById","ser","project_id","body","response","method","headers","JSON","stringify","increaseProgress","prev","percent_finished","project_prio","project_title","project_descr"],"mappings":"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","sourcesContent":["import React, { useState, useContext, Fragment, useEffect } from \"react\";\n\nimport { GlobalContext } from \"../contexts/GlobalContext\";\nimport { GlobalEdit } from \"../contexts/GlobalEdit\";\n\nimport JsonActivities, { cleanComments } from \"../utilities/JsonActivities\";\nimport { ProjectContext } from \"../contexts/ProjectContext\";\nimport { ProgressContext } from \"../contexts/ProgressContext\";\nimport { ProgressBar } from \"./ProgressBar\";\n\nconst ProjectInfo = () => {\n    let newComment;\n    const { value, setValue } = useContext(GlobalContext);\n    const { viewProject, setViewProject } = useContext(ProjectContext);\n    const { temporaryProgress, setTemporaryProgress } = useContext(\n        ProgressContext\n    );\n    const [commentsRendered, setCommentsRendered] = useState([]);\n    const [newlyAddedComment, setNewlyAddedComment] = useState(false);\n    const [input, setInput] = useState(false);\n\n    const registerInput = (e) => {\n        console.log(e.target.value);\n        if (e.target.value.length < 5) {\n            setInput(false);\n        } else setInput(true);\n    };\n\n    let id = value.gy.id;\n\n    const renderComments = (arr) => {\n        let fetchedComments = arr.map((it) => {\n            let dateEntry =\n                it[\"added\"].substring(8, 10) +\n                \".\" +\n                it[\"added\"].substring(5, 7);\n            return (\n                <li>\n                    <p>\n                        - &nbsp;{\" \"}\n                        <span className=\"comment-date\">{dateEntry}</span>:\n                        &nbsp;{it[\"comment\"]}\n                    </p>\n                </li>\n            );\n        });\n        console.log(fetchedComments);\n        setCommentsRendered(fetchedComments);\n    };\n    const getComments = async () => {\n        try {\n            await fetch(\n                `http://138.68.88.7:5000/comments/${id}/${viewProject[\"project_id\"]}`\n            )\n                .then((res) => res.json())\n                .then((json) => renderComments(json));\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    const addComment = async () => {\n        newComment = document.getElementById(\"project-textarea\").value;\n        console.log(newComment.length);\n        if (newComment.length < 5) return;\n        let ser = viewProject.project_id;\n        try {\n            const body = {\n                id,\n                ser,\n                newComment,\n            };\n            console.log(body);\n            const response = await fetch(`http://138.68.88.7:5000/comments`, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body),\n            });\n            document.getElementById(\"project-textarea\").value = null;\n            setNewlyAddedComment(true);\n            setInput(false);\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    const increaseProgress = () => {\n        setTemporaryProgress((prev) => {\n            if (temporaryProgress == null) {\n                temporaryProgress = viewProject.percent_finished + 5;\n            } else {\n                temporaryProgress = prev + 5;\n            }\n        });\n    };\n\n    useEffect(() => {\n        setCommentsRendered([]);\n        getComments();\n    }, [viewProject]);\n\n    useEffect(() => {\n        getComments();\n        setNewlyAddedComment(false);\n    }, [newlyAddedComment]);\n\n    if (viewProject) {\n        return (\n            <div className=\"project-info-container\">\n                <div className=\"project-title-container\">\n                    <div className=\"project-visual-info\">\n                        <div className=\"project-prio-visual\">\n                            P{viewProject.project_prio}\n                        </div>\n                    </div>\n                    <p>{viewProject.project_title}</p>\n                </div>\n                <div className=\"progress-box\">\n                    <ProgressBar done={viewProject.percent_finished} />\n                    <div className=\"progress-input\" onClick={increaseProgress}>\n                        +\n                    </div>\n                </div>\n\n                <div className=\"project-descr-container\">\n                    <p className=\"project-description-header\">\n                        Tilleggsinformasjon\n                    </p>\n                    <p className=\"project-description\">\n                        {viewProject.project_descr}\n                    </p>\n                </div>\n                <div className=\"project-completion-container\"></div>\n                <div className=\"comment-list-container\">\n                    <p className=\"comment-list-header\">Kommentarer</p>\n                    <ul className=\"comment-list\">{commentsRendered}</ul>\n                    <div className=\"comment-input-container\">\n                        <textarea\n                            className=\"comment-textarea\"\n                            id=\"project-textarea\"\n                            placeholder=\"Skriv en kommentar &#13;&#10;(minst 4 tegn)\"\n                            onChange={(e) => registerInput(e)}\n                        ></textarea>\n                        <div\n                            className={`add-comment-button ${\n                                input ? \"show\" : \"\"\n                            }`}\n                            id=\"submit-comment\"\n                            onClick={addComment}\n                        >\n                            +\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    } else return null;\n};\n\nexport default ProjectInfo;\n"]},"metadata":{},"sourceType":"module"}